<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classfs_1_1_open_mode" kind="class" language="C++" prot="public">
    <compoundname>fs::OpenMode</compoundname>
    <basecompoundref refid="classfs_1_1_file_info_flags" prot="public" virt="non-virtual">fs::FileInfoFlags</basecompoundref>
    <derivedcompoundref refid="classfs_1_1_file_info" prot="public" virt="non-virtual">fs::FileInfo</derivedcompoundref>
    <includes local="no">FileInfo.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfs_1_1_open_mode_1a2508021d47bade20acec4f379d4aea82" prot="private" static="no" mutable="no">
        <type><ref refid="classfs_1_1_file_info_flags_1a79f31ab4b6deb27ede7b26193adb5c1d" kindref="member">OpenFlags</ref></type>
        <definition>OpenFlags fs::OpenMode::m_flags</definition>
        <argsstring></argsstring>
        <name>m_flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="257" column="13" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfs_1_1_open_mode_1aaea5a754bc69d376da33d4f10ee21357" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fs::OpenMode::OpenMode</definition>
        <argsstring>()</argsstring>
        <name>OpenMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="161" column="3" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1a274e29cafdc28e1f4bad9227a7b3579c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fs::OpenMode::OpenMode</definition>
        <argsstring>(OpenFlags flags)</argsstring>
        <name>OpenMode</name>
        <param>
          <type><ref refid="classfs_1_1_file_info_flags_1a79f31ab4b6deb27ede7b26193adb5c1d" kindref="member">OpenFlags</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="162" column="12" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1ad6de8b2940d251ce8503eb0d95ea4906" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fs::OpenMode::is_read_only</definition>
        <argsstring>() const</argsstring>
        <name>is_read_only</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="190" column="9" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="190" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1ac1c5065cb0a3571ad809d59527aa828a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fs::OpenMode::is_write_only</definition>
        <argsstring>() const</argsstring>
        <name>is_write_only</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="193" column="9" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="193" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1ab340d3fb5406eae30983ce9b362dedd3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fs::OpenMode::is_read_write</definition>
        <argsstring>() const</argsstring>
        <name>is_read_write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="196" column="9" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1ac5b343d4b368857ad796f18794dd432c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_file_info_flags_1a79f31ab4b6deb27ede7b26193adb5c1d" kindref="member">OpenFlags</ref></type>
        <definition>OpenFlags fs::OpenMode::access</definition>
        <argsstring>() const</argsstring>
        <name>access</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="199" column="14" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="199" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1a6d5e9e5e59a6486b223a8e52fff43108" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fs::OpenMode::is_create</definition>
        <argsstring>() const</argsstring>
        <name>is_create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="204" column="9" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="204" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1aabd19bd164a43109f21e300443a8e651" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fs::OpenMode::is_exclusive</definition>
        <argsstring>() const</argsstring>
        <name>is_exclusive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="205" column="9" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="205" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1a9917cd51c2a1d4db4d18892abe92b9ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fs::OpenMode::is_truncate</definition>
        <argsstring>() const</argsstring>
        <name>is_truncate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="208" column="9" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="208" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1a1225ecff23511c050cea4c6778bb68fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fs::OpenMode::is_append</definition>
        <argsstring>() const</argsstring>
        <name>is_append</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="211" column="9" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="211" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1a0a75b134342d2b8c45d8ab4007e1c88b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fs::OpenMode::is_non_blocking</definition>
        <argsstring>() const</argsstring>
        <name>is_non_blocking</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="212" column="9" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1a962bd758cad028bb7359253d1d2cf494" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_open_mode" kindref="compound">OpenMode</ref> &amp;</type>
        <definition>OpenMode &amp; fs::OpenMode::set_read_only</definition>
        <argsstring>()</argsstring>
        <name>set_read_only</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="216" column="12" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="216" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1a1e14f3cedc2c0e1c6ebfdc2f68b8c169" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_open_mode" kindref="compound">OpenMode</ref> &amp;</type>
        <definition>OpenMode &amp; fs::OpenMode::set_write_only</definition>
        <argsstring>()</argsstring>
        <name>set_write_only</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="221" column="12" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="221" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1a09f0354abc63c5c2ec445f427e53ced0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_open_mode" kindref="compound">OpenMode</ref> &amp;</type>
        <definition>OpenMode &amp; fs::OpenMode::set_read_write</definition>
        <argsstring>()</argsstring>
        <name>set_read_write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="226" column="12" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="226" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1a8e5a08935b7921fde6a780bd93435d05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_open_mode" kindref="compound">OpenMode</ref> &amp;</type>
        <definition>OpenMode &amp; fs::OpenMode::set_create</definition>
        <argsstring>()</argsstring>
        <name>set_create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="231" column="12" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1a0ccdbbc19cd9bcdcbbafe7b29391bb66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_open_mode" kindref="compound">OpenMode</ref> &amp;</type>
        <definition>OpenMode &amp; fs::OpenMode::set_truncate</definition>
        <argsstring>()</argsstring>
        <name>set_truncate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="235" column="12" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="235" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1a2cdaee03788a3ca499bfa8a0f564edf8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_open_mode" kindref="compound">OpenMode</ref> &amp;</type>
        <definition>OpenMode &amp; fs::OpenMode::set_append</definition>
        <argsstring>()</argsstring>
        <name>set_append</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="239" column="12" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="239" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1ab52df834f18a59e38d018775997f0902" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_open_mode" kindref="compound">OpenMode</ref> &amp;</type>
        <definition>OpenMode &amp; fs::OpenMode::set_exclusive</definition>
        <argsstring>()</argsstring>
        <name>set_exclusive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="243" column="12" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="243" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1ae85ba95f72aef4a8165fee83b2098afd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_open_mode" kindref="compound">OpenMode</ref> &amp;</type>
        <definition>OpenMode &amp; fs::OpenMode::set_non_blocking</definition>
        <argsstring>()</argsstring>
        <name>set_non_blocking</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="247" column="12" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="247" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1acc48a25622a68dfce0a2b8516b1e8326" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_file_info_flags_1a79f31ab4b6deb27ede7b26193adb5c1d" kindref="member">OpenFlags</ref></type>
        <definition>OpenFlags fs::OpenMode::o_flags</definition>
        <argsstring>() const</argsstring>
        <name>o_flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="252" column="14" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="252" bodyend="252"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classfs_1_1_open_mode_1a81f16fb3e8c4b1cbdedca3ab6a6ed9e4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_open_mode" kindref="compound">OpenMode</ref></type>
        <definition>static OpenMode fs::OpenMode::create</definition>
        <argsstring>()</argsstring>
        <name>create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="166" column="19" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="166" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1a73e1dd025413a261f6bc9d89425be5ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_open_mode" kindref="compound">OpenMode</ref></type>
        <definition>static OpenMode fs::OpenMode::create_append_write_only</definition>
        <argsstring>()</argsstring>
        <name>create_append_write_only</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="169" column="19" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="169" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1adbb79ac5a0bda592b9ef8b0abf76bd48" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_open_mode" kindref="compound">OpenMode</ref></type>
        <definition>static OpenMode fs::OpenMode::create_truncate</definition>
        <argsstring>()</argsstring>
        <name>create_truncate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="173" column="19" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1ad1475da7eba5443e6d61e8488a475344" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_open_mode" kindref="compound">OpenMode</ref></type>
        <definition>static OpenMode fs::OpenMode::append</definition>
        <argsstring>()</argsstring>
        <name>append</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="177" column="19" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="177" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1a5d2739a09f04b1ea2e3d97793266b8a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_open_mode" kindref="compound">OpenMode</ref></type>
        <definition>static OpenMode fs::OpenMode::append_read_write</definition>
        <argsstring>()</argsstring>
        <name>append_read_write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="180" column="19" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="180" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1a200f68e6902aa665179255291a303111" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_open_mode" kindref="compound">OpenMode</ref></type>
        <definition>static OpenMode fs::OpenMode::read_write</definition>
        <argsstring>()</argsstring>
        <name>read_write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="183" column="19" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="183" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1a751d3dd39d9f50ff529c8a955bb7b6be" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_open_mode" kindref="compound">OpenMode</ref></type>
        <definition>static OpenMode fs::OpenMode::read_only</definition>
        <argsstring>()</argsstring>
        <name>read_only</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="184" column="19" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1acba431eb4041c71ede2c5dc54eff7282" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_open_mode" kindref="compound">OpenMode</ref></type>
        <definition>static OpenMode fs::OpenMode::write_only</definition>
        <argsstring>()</argsstring>
        <name>write_only</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="185" column="19" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="185" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_open_mode_1a6fe40a6eb18bb8f1f1ced0f3be8ca0ac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_open_mode" kindref="compound">OpenMode</ref></type>
        <definition>static OpenMode fs::OpenMode::append_write_only</definition>
        <argsstring>()</argsstring>
        <name>append_write_only</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="186" column="19" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="186" bodyend="188"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classfs_1_1_open_mode_1a919814f0861aa5f727a91a431ae41393" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fs::OpenMode::clear_access</definition>
        <argsstring>()</argsstring>
        <name>clear_access</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="255" column="8" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="255" bodyend="255"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>fs::FileInfo</label>
        <link refid="classfs_1_1_file_info"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fs::FileInfoFlags</label>
        <link refid="classfs_1_1_file_info_flags"/>
      </node>
      <node id="1">
        <label>fs::OpenMode</label>
        <link refid="classfs_1_1_open_mode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>fs::FileInfoFlags</label>
        <link refid="classfs_1_1_file_info_flags"/>
      </node>
      <node id="1">
        <label>fs::OpenMode</label>
        <link refid="classfs_1_1_open_mode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="API/libraries/FsAPI/include/fs/FileInfo.hpp" line="159" column="1" bodyfile="API/libraries/FsAPI/include/fs/FileInfo.hpp" bodystart="159" bodyend="258"/>
    <listofallmembers>
      <member refid="classfs_1_1_open_mode_1ac5b343d4b368857ad796f18794dd432c" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>access</name></member>
      <member refid="classfs_1_1_file_info_flags_1aa8c8d5b66e54b777f3d1ada3d0197930" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>AccessFlags</name></member>
      <member refid="classfs_1_1_open_mode_1ad1475da7eba5443e6d61e8488a475344" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>append</name></member>
      <member refid="classfs_1_1_open_mode_1a5d2739a09f04b1ea2e3d97793266b8a5" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>append_read_write</name></member>
      <member refid="classfs_1_1_open_mode_1a6fe40a6eb18bb8f1f1ced0f3be8ca0ac" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>append_write_only</name></member>
      <member refid="classfs_1_1_open_mode_1a919814f0861aa5f727a91a431ae41393" prot="private" virt="non-virtual"><scope>fs::OpenMode</scope><name>clear_access</name></member>
      <member refid="classfs_1_1_open_mode_1a81f16fb3e8c4b1cbdedca3ab6a6ed9e4" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>create</name></member>
      <member refid="classfs_1_1_open_mode_1a73e1dd025413a261f6bc9d89425be5ab" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>create_append_write_only</name></member>
      <member refid="classfs_1_1_open_mode_1adbb79ac5a0bda592b9ef8b0abf76bd48" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>create_truncate</name></member>
      <member refid="classfs_1_1_open_mode_1a1225ecff23511c050cea4c6778bb68fa" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>is_append</name></member>
      <member refid="classfs_1_1_open_mode_1a6d5e9e5e59a6486b223a8e52fff43108" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>is_create</name></member>
      <member refid="classfs_1_1_open_mode_1aabd19bd164a43109f21e300443a8e651" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>is_exclusive</name></member>
      <member refid="classfs_1_1_open_mode_1a0a75b134342d2b8c45d8ab4007e1c88b" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>is_non_blocking</name></member>
      <member refid="classfs_1_1_open_mode_1ad6de8b2940d251ce8503eb0d95ea4906" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>is_read_only</name></member>
      <member refid="classfs_1_1_open_mode_1ab340d3fb5406eae30983ce9b362dedd3" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>is_read_write</name></member>
      <member refid="classfs_1_1_open_mode_1a9917cd51c2a1d4db4d18892abe92b9ff" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>is_truncate</name></member>
      <member refid="classfs_1_1_open_mode_1ac1c5065cb0a3571ad809d59527aa828a" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>is_write_only</name></member>
      <member refid="classfs_1_1_open_mode_1a2508021d47bade20acec4f379d4aea82" prot="private" virt="non-virtual"><scope>fs::OpenMode</scope><name>m_flags</name></member>
      <member refid="classfs_1_1_open_mode_1acc48a25622a68dfce0a2b8516b1e8326" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>o_flags</name></member>
      <member refid="classfs_1_1_file_info_flags_1a79f31ab4b6deb27ede7b26193adb5c1d" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>OpenFlags</name></member>
      <member refid="classfs_1_1_open_mode_1aaea5a754bc69d376da33d4f10ee21357" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>OpenMode</name></member>
      <member refid="classfs_1_1_open_mode_1a274e29cafdc28e1f4bad9227a7b3579c" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>OpenMode</name></member>
      <member refid="classfs_1_1_file_info_flags_1aab8959020c647fca0f3d80e0101b5abf" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>PermissionFlags</name></member>
      <member refid="classfs_1_1_open_mode_1a751d3dd39d9f50ff529c8a955bb7b6be" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>read_only</name></member>
      <member refid="classfs_1_1_open_mode_1a200f68e6902aa665179255291a303111" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>read_write</name></member>
      <member refid="classfs_1_1_open_mode_1a2cdaee03788a3ca499bfa8a0f564edf8" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>set_append</name></member>
      <member refid="classfs_1_1_open_mode_1a8e5a08935b7921fde6a780bd93435d05" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>set_create</name></member>
      <member refid="classfs_1_1_open_mode_1ab52df834f18a59e38d018775997f0902" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>set_exclusive</name></member>
      <member refid="classfs_1_1_open_mode_1ae85ba95f72aef4a8165fee83b2098afd" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>set_non_blocking</name></member>
      <member refid="classfs_1_1_open_mode_1a962bd758cad028bb7359253d1d2cf494" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>set_read_only</name></member>
      <member refid="classfs_1_1_open_mode_1a09f0354abc63c5c2ec445f427e53ced0" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>set_read_write</name></member>
      <member refid="classfs_1_1_open_mode_1a0ccdbbc19cd9bcdcbbafe7b29391bb66" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>set_truncate</name></member>
      <member refid="classfs_1_1_open_mode_1a1e14f3cedc2c0e1c6ebfdc2f68b8c169" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>set_write_only</name></member>
      <member refid="classfs_1_1_file_info_flags_1ad1f26cc0bce96368db7bd5c4d5b59704" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>TypeFlags</name></member>
      <member refid="classfs_1_1_open_mode_1acba431eb4041c71ede2c5dc54eff7282" prot="public" virt="non-virtual"><scope>fs::OpenMode</scope><name>write_only</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
