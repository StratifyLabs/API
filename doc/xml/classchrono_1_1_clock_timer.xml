<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classchrono_1_1_clock_timer" kind="class" language="C++" prot="public">
    <compoundname>chrono::ClockTimer</compoundname>
    <basecompoundref refid="classapi_1_1_execution_context" prot="public" virt="non-virtual">api::ExecutionContext</basecompoundref>
    <includes local="no">ClockTimer.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classchrono_1_1_clock_timer_1aa5f5d554be40c1adb5bc07b1da5809cc" prot="public" static="no" strong="yes">
        <type></type>
        <name>IsRunning</name>
        <enumvalue id="classchrono_1_1_clock_timer_1aa5f5d554be40c1adb5bc07b1da5809cca7fa3b767c460b54a2be4d49030b349c7" prot="public">
          <name>no</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classchrono_1_1_clock_timer_1aa5f5d554be40c1adb5bc07b1da5809ccaa6105c0a611b41b08f1209506350279e" prot="public">
          <name>yes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="18" column="3" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="18" bodyend="20"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classchrono_1_1_clock_timer_1ad960df538e6d90ceccaff3ef8c4ac2bd" prot="private" static="no" mutable="no">
        <type><ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref></type>
        <definition>ClockTime chrono::ClockTimer::m_start</definition>
        <argsstring></argsstring>
        <name>m_start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="54" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classchrono_1_1_clock_timer_1aad6221e363f54ec8bc32d45f6d874920" prot="private" static="no" mutable="no">
        <type><ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref></type>
        <definition>ClockTime chrono::ClockTimer::m_stop</definition>
        <argsstring></argsstring>
        <name>m_stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="55" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classchrono_1_1_clock_timer_1a903e1adb48548e7d9e72b471daaac365" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>chrono::ClockTimer::ClockTimer</definition>
        <argsstring>()</argsstring>
        <name>ClockTimer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="22" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_timer_1aee3c08eb70da73c260a91bf64b5b1726" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>chrono::ClockTimer::ClockTimer</definition>
        <argsstring>(IsRunning is_running)</argsstring>
        <name>ClockTimer</name>
        <param>
          <type><ref refid="classchrono_1_1_clock_timer_1aa5f5d554be40c1adb5bc07b1da5809cc" kindref="member">IsRunning</ref></type>
          <declname>is_running</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="23" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_timer_1a247aa32e0a7fedee6e4d646255dbbe39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_timer" kindref="compound">ClockTimer</ref> &amp;</type>
        <definition>ClockTimer &amp; chrono::ClockTimer::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="26" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_timer_1aca2d02f58c57415d38b0c580587f2a7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_timer" kindref="compound">ClockTimer</ref> &amp;</type>
        <definition>ClockTimer &amp; chrono::ClockTimer::restart</definition>
        <argsstring>()</argsstring>
        <name>restart</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="28" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_timer_1ab5043ebe404fbfbb55a4aa5ce0a42c17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_timer" kindref="compound">ClockTimer</ref> &amp;</type>
        <definition>ClockTimer &amp; chrono::ClockTimer::resume</definition>
        <argsstring>()</argsstring>
        <name>resume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="30" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_timer_1aaf8db1b9fb793765098f6c9c6804c9ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_timer" kindref="compound">ClockTimer</ref> &amp;</type>
        <definition>ClockTimer &amp; chrono::ClockTimer::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="32" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_timer_1a1854a9ec66a8b6748a87349ca410d848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_timer" kindref="compound">ClockTimer</ref> &amp;</type>
        <definition>ClockTimer &amp; chrono::ClockTimer::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="34" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_timer_1a8cc605cdba4890c6bee95be3711fd5a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::ClockTimer::is_running</definition>
        <argsstring>() const</argsstring>
        <name>is_running</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="36" column="9" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_timer_1a95e6fd3752350754b6cde4e157201e33" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::ClockTimer::is_started</definition>
        <argsstring>() const</argsstring>
        <name>is_started</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="37" column="9" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_timer_1a06ee697d107959ef7f8bd2b1fa272cae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::ClockTimer::is_stopped</definition>
        <argsstring>() const</argsstring>
        <name>is_stopped</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="40" column="9" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_timer_1a9fd5192cb674d0f59c2210872fc46688" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::ClockTimer::is_reset</definition>
        <argsstring>() const</argsstring>
        <name>is_reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="44" column="9" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_timer_1ae7aad9577e21d59db2ee6d7d14296c88" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>u32</type>
        <definition>u32 chrono::ClockTimer::milliseconds</definition>
        <argsstring>() const</argsstring>
        <name>milliseconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="46" column="8" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_timer_1a585d980353866461cb2849acdd477786" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>u32</type>
        <definition>u32 chrono::ClockTimer::microseconds</definition>
        <argsstring>() const</argsstring>
        <name>microseconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="47" column="8" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_timer_1a8c6ef8d97fbd24ec9a91934e03c58668" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>u32</type>
        <definition>u32 chrono::ClockTimer::seconds</definition>
        <argsstring>() const</argsstring>
        <name>seconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="48" column="8" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_timer_1a4139270fdd59472671ffb91129b71e18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref></type>
        <definition>ClockTime chrono::ClockTimer::clock_time</definition>
        <argsstring>() const</argsstring>
        <name>clock_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="50" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_timer_1a26b402e4cce1c9d75e449adfe74a37a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref></type>
        <definition>MicroTime chrono::ClockTimer::micro_time</definition>
        <argsstring>() const</argsstring>
        <name>micro_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="51" column="14" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="51" bodyend="51"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classchrono_1_1_clock_timer_1a64159a8771ab284599b9423d97d4788f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref></type>
        <definition>MicroTime chrono::ClockTimer::calc_value</definition>
        <argsstring>() const</argsstring>
        <name>calc_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="57" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>api::ExecutionContext</label>
        <link refid="classapi_1_1_execution_context"/>
      </node>
      <node id="1">
        <label>chrono::ClockTimer</label>
        <link refid="classchrono_1_1_clock_timer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>api::ExecutionContext</label>
        <link refid="classapi_1_1_execution_context"/>
      </node>
      <node id="1">
        <label>chrono::ClockTimer</label>
        <link refid="classchrono_1_1_clock_timer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="15" column="1" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="15" bodyend="58"/>
    <listofallmembers>
      <member refid="classchrono_1_1_clock_timer_1a64159a8771ab284599b9423d97d4788f" prot="private" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>calc_value</name></member>
      <member refid="classchrono_1_1_clock_timer_1a4139270fdd59472671ffb91129b71e18" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>clock_time</name></member>
      <member refid="classchrono_1_1_clock_timer_1a903e1adb48548e7d9e72b471daaac365" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>ClockTimer</name></member>
      <member refid="classchrono_1_1_clock_timer_1aee3c08eb70da73c260a91bf64b5b1726" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>ClockTimer</name></member>
      <member refid="classapi_1_1_execution_context_1a79ba50868f43a40ce4f5406a56fd0845" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>context_count</name></member>
      <member refid="classapi_1_1_execution_context_1a856b03dd0b7c7732647427e22226898c" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>error</name></member>
      <member refid="classapi_1_1_execution_context_1a4ec3d1f36462eb85a35a835dd2df9fac" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>exit_fatal</name></member>
      <member refid="classapi_1_1_execution_context_1ab048cd82d85bb12f5866722012f09bcc" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>free_context</name></member>
      <member refid="classapi_1_1_execution_context_1abe4eedd752a09e448e4ddfc38915c2d8" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>handle_system_call_null_result</name></member>
      <member refid="classapi_1_1_execution_context_1abe0670b0e9cdc51ed9e4a8f149befa37" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>handle_system_call_result</name></member>
      <member refid="classapi_1_1_execution_context_1ac0e1592ccf0272449e692ead348fadf6" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>is_error</name></member>
      <member refid="classchrono_1_1_clock_timer_1a9fd5192cb674d0f59c2210872fc46688" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>is_reset</name></member>
      <member refid="classchrono_1_1_clock_timer_1a8cc605cdba4890c6bee95be3711fd5a4" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>is_running</name></member>
      <member refid="classchrono_1_1_clock_timer_1a95e6fd3752350754b6cde4e157201e33" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>is_started</name></member>
      <member refid="classchrono_1_1_clock_timer_1a06ee697d107959ef7f8bd2b1fa272cae" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>is_stopped</name></member>
      <member refid="classapi_1_1_execution_context_1a853635c194f91fc61577f670db986be0" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>is_success</name></member>
      <member refid="classchrono_1_1_clock_timer_1aa5f5d554be40c1adb5bc07b1da5809cc" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>IsRunning</name></member>
      <member refid="classchrono_1_1_clock_timer_1ad960df538e6d90ceccaff3ef8c4ac2bd" prot="private" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>m_start</name></member>
      <member refid="classchrono_1_1_clock_timer_1aad6221e363f54ec8bc32d45f6d874920" prot="private" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>m_stop</name></member>
      <member refid="classchrono_1_1_clock_timer_1a26b402e4cce1c9d75e449adfe74a37a9" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>micro_time</name></member>
      <member refid="classchrono_1_1_clock_timer_1a585d980353866461cb2849acdd477786" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>microseconds</name></member>
      <member refid="classchrono_1_1_clock_timer_1ae7aad9577e21d59db2ee6d7d14296c88" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>milliseconds</name></member>
      <member refid="classchrono_1_1_clock_timer_1a1854a9ec66a8b6748a87349ca410d848" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>reset</name></member>
      <member refid="classapi_1_1_execution_context_1ab28ff28529a36ab1281f4a76dac43e67" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>reset_error</name></member>
      <member refid="classchrono_1_1_clock_timer_1aca2d02f58c57415d38b0c580587f2a7e" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>restart</name></member>
      <member refid="classchrono_1_1_clock_timer_1ab5043ebe404fbfbb55a4aa5ce0a42c17" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>resume</name></member>
      <member refid="classapi_1_1_execution_context_1ad9199bc3e70a5685dac83e068ec0303a" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>return_value</name></member>
      <member refid="classchrono_1_1_clock_timer_1a8c6ef8d97fbd24ec9a91934e03c58668" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>seconds</name></member>
      <member refid="classchrono_1_1_clock_timer_1a247aa32e0a7fedee6e4d646255dbbe39" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>start</name></member>
      <member refid="classchrono_1_1_clock_timer_1aaf8db1b9fb793765098f6c9c6804c9ec" prot="public" virt="non-virtual"><scope>chrono::ClockTimer</scope><name>stop</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
