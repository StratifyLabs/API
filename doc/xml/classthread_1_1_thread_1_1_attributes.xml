<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classthread_1_1_thread_1_1_attributes" kind="class" language="C++" prot="public">
    <compoundname>thread::Thread::Attributes</compoundname>
    <basecompoundref refid="classapi_1_1_execution_context" prot="public" virt="non-virtual">api::ExecutionContext</basecompoundref>
    <includes local="no">Thread.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classthread_1_1_thread_1_1_attributes_1adbc148eaddd341d7ae4d07c9e9e33bfd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Thread</definition>
        <argsstring></argsstring>
        <name>Thread</name>
        <param>
          <type><ref refid="classthread_1_1_thread" kindref="compound">Thread</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Thread.hpp" line="66" column="18" bodyfile="API/libraries/ThreadAPI/include/thread/Thread.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classthread_1_1_thread_1_1_attributes_1a862f43cacc4b18f4c90bd778c4ee5bfa" prot="private" static="no" mutable="no">
        <type>pthread_attr_t</type>
        <definition>pthread_attr_t thread::Thread::Attributes::m_pthread_attr</definition>
        <argsstring></argsstring>
        <name>m_pthread_attr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Thread.hpp" line="67" column="20" bodyfile="API/libraries/ThreadAPI/include/thread/Thread.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classthread_1_1_thread_1_1_attributes_1a4896ad7bdfac4c8b3c8fec2a964f3535" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>thread::Thread::Attributes::Attributes</definition>
        <argsstring>()</argsstring>
        <name>Attributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Thread.hpp" line="36" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_thread_1_1_attributes_1aad775b9fa8aa1eac2fed0cb1a5ea59d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>thread::Thread::Attributes::~Attributes</definition>
        <argsstring>()</argsstring>
        <name>~Attributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Thread.hpp" line="37" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_thread_1_1_attributes_1a81369ac787e013b2e0a0ed29d5f32a6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classthread_1_1_thread_1_1_attributes" kindref="compound">Attributes</ref> &amp;</type>
        <definition>Attributes &amp; thread::Thread::Attributes::set_stack_size</definition>
        <argsstring>(size_t value)</argsstring>
        <name>set_stack_size</name>
        <param>
          <type>size_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Thread.hpp" line="39" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_thread_1_1_attributes_1a56e1b92767db0e45a7b716086eac0121" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int thread::Thread::Attributes::get_stack_size</definition>
        <argsstring>() const</argsstring>
        <name>get_stack_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Thread.hpp" line="40" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_thread_1_1_attributes_1ac18ec36c3d34898c5440327ad2f231cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classthread_1_1_thread_1_1_attributes" kindref="compound">Attributes</ref> &amp;</type>
        <definition>Attributes &amp; thread::Thread::Attributes::set_detach_state</definition>
        <argsstring>(DetachState value)</argsstring>
        <name>set_detach_state</name>
        <param>
          <type><ref refid="classthread_1_1_thread_1a664f458a081e0032836bf3de798753c4" kindref="member">DetachState</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Thread.hpp" line="43" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_thread_1_1_attributes_1ab8bb2ac4015e38958a44d3c8c1a6e7d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classthread_1_1_thread_1_1_attributes" kindref="compound">Attributes</ref> &amp;</type>
        <definition>Attributes &amp; thread::Thread::Attributes::set_joinable</definition>
        <argsstring>()</argsstring>
        <name>set_joinable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Thread.hpp" line="44" column="16" bodyfile="API/libraries/ThreadAPI/include/thread/Thread.hpp" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_thread_1_1_attributes_1af5279370ff4a82b5fb633601ad4dbcfa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classthread_1_1_thread_1_1_attributes" kindref="compound">Attributes</ref> &amp;</type>
        <definition>Attributes &amp; thread::Thread::Attributes::set_detached</definition>
        <argsstring>()</argsstring>
        <name>set_detached</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Thread.hpp" line="48" column="16" bodyfile="API/libraries/ThreadAPI/include/thread/Thread.hpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_thread_1_1_attributes_1a49ed8ada781bb45c985d5745379b30ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classthread_1_1_thread_1a664f458a081e0032836bf3de798753c4" kindref="member">DetachState</ref></type>
        <definition>DetachState thread::Thread::Attributes::get_detach_state</definition>
        <argsstring>() const</argsstring>
        <name>get_detach_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Thread.hpp" line="52" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_thread_1_1_attributes_1ae8bd2a77e11d15030c9bf825ed116af1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classthread_1_1_thread_1_1_attributes" kindref="compound">Attributes</ref> &amp;</type>
        <definition>Attributes &amp; thread::Thread::Attributes::set_inherit_sched</definition>
        <argsstring>(IsInherit value)</argsstring>
        <name>set_inherit_sched</name>
        <param>
          <type><ref refid="classthread_1_1_thread_1a48e6e0cff03495a340a7033cf84e235a" kindref="member">IsInherit</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Thread.hpp" line="54" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_thread_1_1_attributes_1a5cd3a4fa7f531d687e83ac873ad02bca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classthread_1_1_thread_1a48e6e0cff03495a340a7033cf84e235a" kindref="member">IsInherit</ref></type>
        <definition>IsInherit thread::Thread::Attributes::get_inherit_sched</definition>
        <argsstring>() const</argsstring>
        <name>get_inherit_sched</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Thread.hpp" line="55" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_thread_1_1_attributes_1aa9c894d01175f872f70c9099716324cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classthread_1_1_thread_1_1_attributes" kindref="compound">Attributes</ref> &amp;</type>
        <definition>Attributes &amp; thread::Thread::Attributes::set_scope</definition>
        <argsstring>(ContentionScope value)</argsstring>
        <name>set_scope</name>
        <param>
          <type><ref refid="classthread_1_1_thread_1a789bcec59e2258c5ebb2312c56b1fc99" kindref="member">ContentionScope</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Thread.hpp" line="57" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_thread_1_1_attributes_1a34ae6aaec3bf986f250b35170b0524c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classthread_1_1_thread_1a789bcec59e2258c5ebb2312c56b1fc99" kindref="member">ContentionScope</ref></type>
        <definition>ContentionScope thread::Thread::Attributes::get_scope</definition>
        <argsstring>() const</argsstring>
        <name>get_scope</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Thread.hpp" line="58" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_thread_1_1_attributes_1a906bf2fc2b8214351dc116ceaa89f498" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classthread_1_1_thread_1_1_attributes" kindref="compound">Attributes</ref> &amp;</type>
        <definition>Attributes &amp; thread::Thread::Attributes::set_sched_policy</definition>
        <argsstring>(Sched::Policy value)</argsstring>
        <name>set_sched_policy</name>
        <param>
          <type><ref refid="classthread_1_1_sched_1ae7889312e0d18a32eca5a899ac216ca7" kindref="member">Sched::Policy</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Thread.hpp" line="60" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_thread_1_1_attributes_1a9591b2f02c71ce96384f363686458d9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classthread_1_1_thread_1_1_attributes" kindref="compound">Attributes</ref> &amp;</type>
        <definition>Attributes &amp; thread::Thread::Attributes::set_sched_priority</definition>
        <argsstring>(int priority)</argsstring>
        <name>set_sched_priority</name>
        <param>
          <type>int</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Thread.hpp" line="61" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_thread_1_1_attributes_1a25c5888bf349fa8e900aaf443cac0efb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classthread_1_1_sched_1ae7889312e0d18a32eca5a899ac216ca7" kindref="member">Sched::Policy</ref></type>
        <definition>Sched::Policy thread::Thread::Attributes::get_sched_policy</definition>
        <argsstring>() const</argsstring>
        <name>get_sched_policy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Thread.hpp" line="62" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_thread_1_1_attributes_1abbaf0d523d1601d4915f4a656a93c098" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int thread::Thread::Attributes::get_sched_priority</definition>
        <argsstring>() const</argsstring>
        <name>get_sched_priority</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Thread.hpp" line="63" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>api::ExecutionContext</label>
        <link refid="classapi_1_1_execution_context"/>
      </node>
      <node id="1">
        <label>thread::Thread::Attributes</label>
        <link refid="classthread_1_1_thread_1_1_attributes"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>api::ExecutionContext</label>
        <link refid="classapi_1_1_execution_context"/>
      </node>
      <node id="1">
        <label>thread::Thread::Attributes</label>
        <link refid="classthread_1_1_thread_1_1_attributes"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="API/libraries/ThreadAPI/include/thread/Thread.hpp" line="34" column="3" bodyfile="API/libraries/ThreadAPI/include/thread/Thread.hpp" bodystart="34" bodyend="68"/>
    <listofallmembers>
      <member refid="classthread_1_1_thread_1_1_attributes_1a4896ad7bdfac4c8b3c8fec2a964f3535" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>Attributes</name></member>
      <member refid="classapi_1_1_execution_context_1a79ba50868f43a40ce4f5406a56fd0845" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>context_count</name></member>
      <member refid="classapi_1_1_execution_context_1a856b03dd0b7c7732647427e22226898c" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>error</name></member>
      <member refid="classapi_1_1_execution_context_1a4ec3d1f36462eb85a35a835dd2df9fac" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>exit_fatal</name></member>
      <member refid="classapi_1_1_execution_context_1ab048cd82d85bb12f5866722012f09bcc" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>free_context</name></member>
      <member refid="classthread_1_1_thread_1_1_attributes_1a49ed8ada781bb45c985d5745379b30ee" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>get_detach_state</name></member>
      <member refid="classthread_1_1_thread_1_1_attributes_1a5cd3a4fa7f531d687e83ac873ad02bca" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>get_inherit_sched</name></member>
      <member refid="classthread_1_1_thread_1_1_attributes_1a25c5888bf349fa8e900aaf443cac0efb" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>get_sched_policy</name></member>
      <member refid="classthread_1_1_thread_1_1_attributes_1abbaf0d523d1601d4915f4a656a93c098" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>get_sched_priority</name></member>
      <member refid="classthread_1_1_thread_1_1_attributes_1a34ae6aaec3bf986f250b35170b0524c3" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>get_scope</name></member>
      <member refid="classthread_1_1_thread_1_1_attributes_1a56e1b92767db0e45a7b716086eac0121" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>get_stack_size</name></member>
      <member refid="classapi_1_1_execution_context_1abe4eedd752a09e448e4ddfc38915c2d8" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>handle_system_call_null_result</name></member>
      <member refid="classapi_1_1_execution_context_1abe0670b0e9cdc51ed9e4a8f149befa37" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>handle_system_call_result</name></member>
      <member refid="classapi_1_1_execution_context_1ac0e1592ccf0272449e692ead348fadf6" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>is_error</name></member>
      <member refid="classapi_1_1_execution_context_1a853635c194f91fc61577f670db986be0" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>is_success</name></member>
      <member refid="classthread_1_1_thread_1_1_attributes_1a862f43cacc4b18f4c90bd778c4ee5bfa" prot="private" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>m_pthread_attr</name></member>
      <member refid="classapi_1_1_execution_context_1ab28ff28529a36ab1281f4a76dac43e67" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>reset_error</name></member>
      <member refid="classapi_1_1_execution_context_1ad9199bc3e70a5685dac83e068ec0303a" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>return_value</name></member>
      <member refid="classthread_1_1_thread_1_1_attributes_1ac18ec36c3d34898c5440327ad2f231cf" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>set_detach_state</name></member>
      <member refid="classthread_1_1_thread_1_1_attributes_1af5279370ff4a82b5fb633601ad4dbcfa" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>set_detached</name></member>
      <member refid="classthread_1_1_thread_1_1_attributes_1ae8bd2a77e11d15030c9bf825ed116af1" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>set_inherit_sched</name></member>
      <member refid="classthread_1_1_thread_1_1_attributes_1ab8bb2ac4015e38958a44d3c8c1a6e7d1" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>set_joinable</name></member>
      <member refid="classthread_1_1_thread_1_1_attributes_1a906bf2fc2b8214351dc116ceaa89f498" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>set_sched_policy</name></member>
      <member refid="classthread_1_1_thread_1_1_attributes_1a9591b2f02c71ce96384f363686458d9e" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>set_sched_priority</name></member>
      <member refid="classthread_1_1_thread_1_1_attributes_1aa9c894d01175f872f70c9099716324cd" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>set_scope</name></member>
      <member refid="classthread_1_1_thread_1_1_attributes_1a81369ac787e013b2e0a0ed29d5f32a6d" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>set_stack_size</name></member>
      <member refid="classthread_1_1_thread_1_1_attributes_1adbc148eaddd341d7ae4d07c9e9e33bfd" prot="private" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>Thread</name></member>
      <member refid="classthread_1_1_thread_1_1_attributes_1aad775b9fa8aa1eac2fed0cb1a5ea59d7" prot="public" virt="non-virtual"><scope>thread::Thread::Attributes</scope><name>~Attributes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
