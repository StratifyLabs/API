<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classapi_1_1_range" kind="class" language="C++" prot="public">
    <compoundname>api::Range</compoundname>
    <includes local="no">api.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Type</type>
        <defval>int</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classapi_1_1_range_1a3b90271eaa111ea0279d38260d7626bf" prot="private" static="no" mutable="no">
        <type>const Type</type>
        <definition>const Type api::Range&lt; Type &gt;::m_start</definition>
        <argsstring></argsstring>
        <name>m_start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/API/include/api/api.hpp" line="476" column="14" bodyfile="API/libraries/API/include/api/api.hpp" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapi_1_1_range_1a735165667c453bf2f067a3ca1dda74b5" prot="private" static="no" mutable="no">
        <type>const Type</type>
        <definition>const Type api::Range&lt; Type &gt;::m_finish</definition>
        <argsstring></argsstring>
        <name>m_finish</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/API/include/api/api.hpp" line="477" column="14" bodyfile="API/libraries/API/include/api/api.hpp" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapi_1_1_range_1a1dc9e9467b65d06c7b5e58043ad4983e" prot="private" static="no" mutable="no">
        <type><ref refid="classapi_1_1_range_iterator" kindref="compound">RangeIterator</ref>&lt; Type &gt;::TransformCallback</type>
        <definition>RangeIterator&lt;Type&gt;::TransformCallback api::Range&lt; Type &gt;::m_transform</definition>
        <argsstring></argsstring>
        <name>m_transform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/API/include/api/api.hpp" line="478" column="46" bodyfile="API/libraries/API/include/api/api.hpp" bodystart="478" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classapi_1_1_range_1a7ff961fb05ef769f9f8d7d3c075fa632" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Type</type>
        <definition>static Type api::Range&lt; Type &gt;::forward</definition>
        <argsstring>(const Type &amp;a, const Type &amp;)</argsstring>
        <name>forward</name>
        <param>
          <type>const Type &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const Type &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/API/include/api/api.hpp" line="441" column="15" bodyfile="API/libraries/API/include/api/api.hpp" bodystart="441" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="classapi_1_1_range_1a8cf14f8f9f1f1e733238d1629a3d1a0d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Type</type>
        <definition>static Type api::Range&lt; Type &gt;::reverse</definition>
        <argsstring>(const Type &amp;a, const Type &amp;b)</argsstring>
        <name>reverse</name>
        <param>
          <type>const Type &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const Type &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/API/include/api/api.hpp" line="442" column="15" bodyfile="API/libraries/API/include/api/api.hpp" bodystart="442" bodyend="442"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classapi_1_1_range_1abb90825c02c7c7dce59c0fb306f2e7a3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr api::Range&lt; Type &gt;::Range</definition>
        <argsstring>(const Type &amp;start, const Type &amp;finish, typename RangeIterator&lt; Type &gt;::TransformCallback transform=nullptr)</argsstring>
        <name>Range</name>
        <param>
          <type>const Type &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const Type &amp;</type>
          <declname>finish</declname>
        </param>
        <param>
          <type>typename <ref refid="classapi_1_1_range_iterator" kindref="compound">RangeIterator</ref>&lt; Type &gt;::TransformCallback</type>
          <declname>transform</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/API/include/api/api.hpp" line="444" column="13" bodyfile="API/libraries/API/include/api/api.hpp" bodystart="444" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="classapi_1_1_range_1ab6e1013b2c446865ca6246366aadff90" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classapi_1_1_range_iterator" kindref="compound">RangeIterator</ref>&lt; Type &gt;</type>
        <definition>RangeIterator&lt; Type &gt; api::Range&lt; Type &gt;::begin</definition>
        <argsstring>() const noexcept</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/API/include/api/api.hpp" line="454" column="17" bodyfile="API/libraries/API/include/api/api.hpp" bodystart="454" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="classapi_1_1_range_1a074465da10e00d1fc43c364c7c4af551" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classapi_1_1_range_iterator" kindref="compound">RangeIterator</ref>&lt; Type &gt;</type>
        <definition>RangeIterator&lt; Type &gt; api::Range&lt; Type &gt;::begin</definition>
        <argsstring>() noexcept</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/API/include/api/api.hpp" line="457" column="17" bodyfile="API/libraries/API/include/api/api.hpp" bodystart="457" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="classapi_1_1_range_1a66f06b0c16b2c7dc87036fb00a31a03d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classapi_1_1_range_iterator" kindref="compound">RangeIterator</ref>&lt; Type &gt;</type>
        <definition>RangeIterator&lt; Type &gt; api::Range&lt; Type &gt;::end</definition>
        <argsstring>() const noexcept</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/API/include/api/api.hpp" line="461" column="17" bodyfile="API/libraries/API/include/api/api.hpp" bodystart="461" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="classapi_1_1_range_1ad93342ab4b9d4fdd6dff8d844c92279b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classapi_1_1_range_iterator" kindref="compound">RangeIterator</ref>&lt; Type &gt;</type>
        <definition>RangeIterator&lt; Type &gt; api::Range&lt; Type &gt;::end</definition>
        <argsstring>() noexcept</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/API/include/api/api.hpp" line="464" column="17" bodyfile="API/libraries/API/include/api/api.hpp" bodystart="464" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="classapi_1_1_range_1aaa649fc95003c13aa2a96643fd791583" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classapi_1_1_range_iterator" kindref="compound">RangeIterator</ref>&lt; Type &gt;</type>
        <definition>RangeIterator&lt; Type &gt; api::Range&lt; Type &gt;::cbegin</definition>
        <argsstring>() const noexcept</argsstring>
        <name>cbegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/API/include/api/api.hpp" line="468" column="17" bodyfile="API/libraries/API/include/api/api.hpp" bodystart="468" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="classapi_1_1_range_1a3ddeacb57e95ddc209137e6f2efe730e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classapi_1_1_range_iterator" kindref="compound">RangeIterator</ref>&lt; Type &gt;</type>
        <definition>RangeIterator&lt; Type &gt; api::Range&lt; Type &gt;::cend</definition>
        <argsstring>() const noexcept</argsstring>
        <name>cend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/API/include/api/api.hpp" line="471" column="17" bodyfile="API/libraries/API/include/api/api.hpp" bodystart="471" bodyend="473"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="API/libraries/API/include/api/api.hpp" line="439" column="14" bodyfile="API/libraries/API/include/api/api.hpp" bodystart="439" bodyend="479"/>
    <listofallmembers>
      <member refid="classapi_1_1_range_1ab6e1013b2c446865ca6246366aadff90" prot="public" virt="non-virtual"><scope>api::Range</scope><name>begin</name></member>
      <member refid="classapi_1_1_range_1a074465da10e00d1fc43c364c7c4af551" prot="public" virt="non-virtual"><scope>api::Range</scope><name>begin</name></member>
      <member refid="classapi_1_1_range_1aaa649fc95003c13aa2a96643fd791583" prot="public" virt="non-virtual"><scope>api::Range</scope><name>cbegin</name></member>
      <member refid="classapi_1_1_range_1a3ddeacb57e95ddc209137e6f2efe730e" prot="public" virt="non-virtual"><scope>api::Range</scope><name>cend</name></member>
      <member refid="classapi_1_1_range_1a66f06b0c16b2c7dc87036fb00a31a03d" prot="public" virt="non-virtual"><scope>api::Range</scope><name>end</name></member>
      <member refid="classapi_1_1_range_1ad93342ab4b9d4fdd6dff8d844c92279b" prot="public" virt="non-virtual"><scope>api::Range</scope><name>end</name></member>
      <member refid="classapi_1_1_range_1a7ff961fb05ef769f9f8d7d3c075fa632" prot="public" virt="non-virtual"><scope>api::Range</scope><name>forward</name></member>
      <member refid="classapi_1_1_range_1a735165667c453bf2f067a3ca1dda74b5" prot="private" virt="non-virtual"><scope>api::Range</scope><name>m_finish</name></member>
      <member refid="classapi_1_1_range_1a3b90271eaa111ea0279d38260d7626bf" prot="private" virt="non-virtual"><scope>api::Range</scope><name>m_start</name></member>
      <member refid="classapi_1_1_range_1a1dc9e9467b65d06c7b5e58043ad4983e" prot="private" virt="non-virtual"><scope>api::Range</scope><name>m_transform</name></member>
      <member refid="classapi_1_1_range_1abb90825c02c7c7dce59c0fb306f2e7a3" prot="public" virt="non-virtual"><scope>api::Range</scope><name>Range</name></member>
      <member refid="classapi_1_1_range_1a8cf14f8f9f1f1e733238d1629a3d1a0d" prot="public" virt="non-virtual"><scope>api::Range</scope><name>reverse</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
