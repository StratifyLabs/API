<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classfs_1_1_dir" kind="class" language="C++" prot="public">
    <compoundname>fs::Dir</compoundname>
    <basecompoundref refid="classfs_1_1_dir_access" prot="public" virt="non-virtual">fs::DirAccess&lt; Dir &gt;</basecompoundref>
    <includes local="no">Dir.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfs_1_1_dir_1aae7bd88e3bbd21f250c4c0a647dce849" prot="private" static="no" mutable="no">
        <type>DIR *</type>
        <definition>DIR* fs::Dir::m_dirp</definition>
        <argsstring></argsstring>
        <name>m_dirp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/Dir.hpp" line="139" column="7" bodyfile="API/libraries/FsAPI/include/fs/Dir.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfs_1_1_dir_1a8e69af82b22a095f9833ff95c6110ec6" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>fs::Dir::Dir</definition>
        <argsstring>(var::StringView path)</argsstring>
        <name>Dir</name>
        <param>
          <type><ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref></type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/Dir.hpp" line="117" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_dir_1aac3135d9b9e1c55242027044c034ccbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fs::Dir::Dir</definition>
        <argsstring>(const Dir &amp;dir)=delete</argsstring>
        <name>Dir</name>
        <param>
          <type>const <ref refid="classfs_1_1_dir" kindref="compound">Dir</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/Dir.hpp" line="118" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_dir_1a28c1db9b1289653d7657d14123976bce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfs_1_1_dir" kindref="compound">Dir</ref> &amp;</type>
        <definition>Dir &amp; fs::Dir::operator=</definition>
        <argsstring>(const Dir &amp;dir)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classfs_1_1_dir" kindref="compound">Dir</ref> &amp;</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/Dir.hpp" line="119" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_dir_1a203d9f406f9fb02eba31becac0944121" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>fs::Dir::Dir</definition>
        <argsstring>(Dir &amp;&amp;dir) noexcept</argsstring>
        <name>Dir</name>
        <param>
          <type><ref refid="classfs_1_1_dir" kindref="compound">Dir</ref> &amp;&amp;</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/Dir.hpp" line="120" column="3" bodyfile="API/libraries/FsAPI/include/fs/Dir.hpp" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_dir_1ac50313b3387585c635efcdd90c1ec6ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_dir" kindref="compound">Dir</ref> &amp;</type>
        <definition>Dir &amp; fs::Dir::operator=</definition>
        <argsstring>(Dir &amp;&amp;dir)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classfs_1_1_dir" kindref="compound">Dir</ref> &amp;&amp;</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/Dir.hpp" line="121" column="7" bodyfile="API/libraries/FsAPI/include/fs/Dir.hpp" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_dir_1a67f7405aa8202fcad98355585c9fa623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fs::Dir::~Dir</definition>
        <argsstring>()</argsstring>
        <name>~Dir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/Dir.hpp" line="125" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_dir_1aced0a5a5b8faa0ddecf636c1a300c048" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fs::Dir::is_open</definition>
        <argsstring>() const</argsstring>
        <name>is_open</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/Dir.hpp" line="126" column="8" bodyfile="API/libraries/FsAPI/include/fs/Dir.hpp" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_dir_1a43aa6fa476d38c73a8557bec6a87dd67" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fs::Dir::count</definition>
        <argsstring>() const</argsstring>
        <name>count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/Dir.hpp" line="127" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classfs_1_1_dir_1a220c8ca15d8efd66d247e81e7a56dfa7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfs_1_1_dir" kindref="compound">Dir</ref> &amp;</type>
        <definition>Dir &amp; fs::Dir::open</definition>
        <argsstring>(var::StringView path)</argsstring>
        <name>open</name>
        <param>
          <type><ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref></type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/Dir.hpp" line="130" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_dir_1a450fa66bbefe90e39ac202cbb9cef2d9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfs_1_1_dir" kindref="compound">Dir</ref> &amp;</type>
        <definition>Dir &amp; fs::Dir::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/Dir.hpp" line="131" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_dir_1aa7be8a2b54b9f354d3b96b99be990fbb" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int fs::Dir::interface_readdir_r</definition>
        <argsstring>(dirent *result, dirent **resultp) const override</argsstring>
        <name>interface_readdir_r</name>
        <reimplements refid="classfs_1_1_dir_object_1a9cf0d16ae1f40dcd2eed25d363282fb5">interface_readdir_r</reimplements>
        <param>
          <type>dirent *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>dirent **</type>
          <declname>resultp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/Dir.hpp" line="133" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_dir_1acceba11d10374cd85fd074023f7ff598" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int fs::Dir::interface_telldir</definition>
        <argsstring>() const override</argsstring>
        <name>interface_telldir</name>
        <reimplements refid="classfs_1_1_dir_object_1ac909ef634868fc5f21b6137f17075964">interface_telldir</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/Dir.hpp" line="134" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_dir_1a69dcbb1a130c6f7d1ef84e1c78335ed9" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void fs::Dir::interface_seekdir</definition>
        <argsstring>(size_t location) const override</argsstring>
        <name>interface_seekdir</name>
        <reimplements refid="classfs_1_1_dir_object_1a6203cf3e365076d2c85df84fe40465f8">interface_seekdir</reimplements>
        <param>
          <type>size_t</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/Dir.hpp" line="135" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_dir_1ab08f7bdf91a65ffda0b046f237bcb779" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void fs::Dir::interface_rewinddir</definition>
        <argsstring>() const override</argsstring>
        <name>interface_rewinddir</name>
        <reimplements refid="classfs_1_1_dir_object_1a35c00cb79ac4a8166972979a2edccb3b">interface_rewinddir</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/Dir.hpp" line="136" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classfs_1_1_dir_1af2e0b4d936a228e12db95c183159eb2b" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DIR *</type>
        <definition>static DIR * fs::Dir::internal_opendir</definition>
        <argsstring>(const char *path)</argsstring>
        <name>internal_opendir</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/Dir.hpp" line="140" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>fs::DirAccess&lt; Dir &gt;</label>
        <link refid="classfs_1_1_dir_access"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>api::ExecutionContext</label>
        <link refid="classapi_1_1_execution_context"/>
      </node>
      <node id="1">
        <label>fs::Dir</label>
        <link refid="classfs_1_1_dir"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>fs::DirObject</label>
        <link refid="classfs_1_1_dir_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>fs::DirAccess&lt; Dir &gt;</label>
        <link refid="classfs_1_1_dir_access"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>api::ExecutionContext</label>
        <link refid="classapi_1_1_execution_context"/>
      </node>
      <node id="1">
        <label>fs::Dir</label>
        <link refid="classfs_1_1_dir"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>fs::DirObject</label>
        <link refid="classfs_1_1_dir_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="API/libraries/FsAPI/include/fs/Dir.hpp" line="115" column="1" bodyfile="API/libraries/FsAPI/include/fs/Dir.hpp" bodystart="115" bodyend="141"/>
    <listofallmembers>
      <member refid="classfs_1_1_dir_1a450fa66bbefe90e39ac202cbb9cef2d9" prot="protected" virt="non-virtual"><scope>fs::Dir</scope><name>close</name></member>
      <member refid="classapi_1_1_execution_context_1a79ba50868f43a40ce4f5406a56fd0845" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>context_count</name></member>
      <member refid="classfs_1_1_dir_1a43aa6fa476d38c73a8557bec6a87dd67" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>count</name></member>
      <member refid="classfs_1_1_dir_1a8e69af82b22a095f9833ff95c6110ec6" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>Dir</name></member>
      <member refid="classfs_1_1_dir_1aac3135d9b9e1c55242027044c034ccbb" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>Dir</name></member>
      <member refid="classfs_1_1_dir_1a203d9f406f9fb02eba31becac0944121" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>Dir</name></member>
      <member refid="classfs_1_1_dir_object_1a0a8cf350484d1da42079f49f7e2b33ab" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>DirObject</name></member>
      <member refid="classfs_1_1_dir_object_1ace6ff62343ce3fb5ec6e80af08f93dad" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>DirObject</name></member>
      <member refid="classfs_1_1_dir_object_1a69a7799f7eab9fbbefb1ed98352c6a2d" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>DirObject</name></member>
      <member refid="classfs_1_1_dir_object_1a9131c305be3b758b8a44b097c752b0e2" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>entry_name</name></member>
      <member refid="classapi_1_1_execution_context_1a856b03dd0b7c7732647427e22226898c" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>error</name></member>
      <member refid="classapi_1_1_execution_context_1a4ec3d1f36462eb85a35a835dd2df9fac" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>exit_fatal</name></member>
      <member refid="classfs_1_1_dir_object_1a11d950292f00a2c3341f0e98a6737a55" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>filter_hidden</name></member>
      <member refid="classapi_1_1_execution_context_1ab048cd82d85bb12f5866722012f09bcc" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>free_context</name></member>
      <member refid="classfs_1_1_dir_object_1adc3cbfdebf52c1b192f09fe03374bcea" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>get_entry</name></member>
      <member refid="classapi_1_1_execution_context_1abe4eedd752a09e448e4ddfc38915c2d8" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>handle_system_call_null_result</name></member>
      <member refid="classapi_1_1_execution_context_1abe0670b0e9cdc51ed9e4a8f149befa37" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>handle_system_call_result</name></member>
      <member refid="classfs_1_1_dir_object_1af4e21b83aa68e726e134b65e82032489" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>ino</name></member>
      <member refid="classfs_1_1_dir_1aa7be8a2b54b9f354d3b96b99be990fbb" prot="protected" virt="virtual"><scope>fs::Dir</scope><name>interface_readdir_r</name></member>
      <member refid="classfs_1_1_dir_1ab08f7bdf91a65ffda0b046f237bcb779" prot="protected" virt="virtual"><scope>fs::Dir</scope><name>interface_rewinddir</name></member>
      <member refid="classfs_1_1_dir_1a69dcbb1a130c6f7d1ef84e1c78335ed9" prot="protected" virt="virtual"><scope>fs::Dir</scope><name>interface_seekdir</name></member>
      <member refid="classfs_1_1_dir_1acceba11d10374cd85fd074023f7ff598" prot="protected" virt="virtual"><scope>fs::Dir</scope><name>interface_telldir</name></member>
      <member refid="classfs_1_1_dir_1af2e0b4d936a228e12db95c183159eb2b" prot="private" virt="non-virtual"><scope>fs::Dir</scope><name>internal_opendir</name></member>
      <member refid="classapi_1_1_execution_context_1ac0e1592ccf0272449e692ead348fadf6" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>is_error</name></member>
      <member refid="classfs_1_1_dir_1aced0a5a5b8faa0ddecf636c1a300c048" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>is_open</name></member>
      <member refid="classapi_1_1_execution_context_1a853635c194f91fc61577f670db986be0" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>is_success</name></member>
      <member refid="classfs_1_1_dir_object_1a3895c77a098308ba302d5fb3b7502fc9" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>IsRecursive</name></member>
      <member refid="classfs_1_1_dir_1aae7bd88e3bbd21f250c4c0a647dce849" prot="private" virt="non-virtual"><scope>fs::Dir</scope><name>m_dirp</name></member>
      <member refid="classfs_1_1_dir_1a220c8ca15d8efd66d247e81e7a56dfa7" prot="protected" virt="non-virtual"><scope>fs::Dir</scope><name>open</name></member>
      <member refid="classfs_1_1_dir_1a28c1db9b1289653d7657d14123976bce" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>operator=</name></member>
      <member refid="classfs_1_1_dir_1ac50313b3387585c635efcdd90c1ec6ac" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>operator=</name></member>
      <member refid="classfs_1_1_dir_object_1a2d4aaaa44605f7d48b0b5b6c18876060" prot="public" virt="non-virtual" ambiguityscope="DirAccess&lt; Dir &gt;::"><scope>fs::Dir</scope><name>operator=</name></member>
      <member refid="classfs_1_1_dir_object_1a131a235447a8fb06ccf24b077210cf80" prot="public" virt="non-virtual" ambiguityscope="DirAccess&lt; Dir &gt;::"><scope>fs::Dir</scope><name>operator=</name></member>
      <member refid="classfs_1_1_dir_object_1a6ce47eea4cfa73c68e4e18fd645a7e6a" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>path</name></member>
      <member refid="classfs_1_1_dir_object_1a10f48d15fd5a20ed5d5b2fea194d27f9" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>read</name></member>
      <member refid="classapi_1_1_execution_context_1ab28ff28529a36ab1281f4a76dac43e67" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>reset_error</name></member>
      <member refid="classapi_1_1_execution_context_1ad9199bc3e70a5685dac83e068ec0303a" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>return_value</name></member>
      <member refid="classfs_1_1_dir_access_1a0b2d97c199ef10da3fe5f579047b59ba" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>rewind</name></member>
      <member refid="classfs_1_1_dir_access_1a72e6de964534ef853bd628cb8fa939d2" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>rewind</name></member>
      <member refid="classfs_1_1_dir_access_1a9817bb0e9bc0d5a35ac39a9bd2e46e00" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>seek</name></member>
      <member refid="classfs_1_1_dir_access_1a2b321180a74bc767fd5cf9f43de35b08" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>seek</name></member>
      <member refid="classfs_1_1_dir_object_1a55fd71c8e7c3ed96d6acc29ed8f4785e" prot="protected" virt="non-virtual"><scope>fs::Dir</scope><name>set_path</name></member>
      <member refid="classfs_1_1_dir_object_1adf0ff46667f9a311aa221727d355d601" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>tell</name></member>
      <member refid="classfs_1_1_dir_1a67f7405aa8202fcad98355585c9fa623" prot="public" virt="non-virtual"><scope>fs::Dir</scope><name>~Dir</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
