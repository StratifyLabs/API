<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classchrono_1_1_clock_time" kind="class" language="C++" prot="public">
    <compoundname>chrono::ClockTime</compoundname>
    <includes local="no">ClockTime.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classchrono_1_1_clock_time_1af459a6b32ddf83990c3c791486e32dcf" prot="public" static="no" strong="yes">
        <type></type>
        <name>ClockId</name>
        <enumvalue id="classchrono_1_1_clock_time_1af459a6b32ddf83990c3c791486e32dcfa37e2a166d3ab28426a1d1a481d356d33" prot="public">
          <name>realtime</name>
          <initializer>= CLOCK_REALTIME</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="17" column="3" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="17" bodyend="17"/>
      </memberdef>
      <memberdef kind="typedef" id="classchrono_1_1_clock_time_1a5b5b2d4f96914fc017984497379ff84c" prot="public" static="no">
        <type><ref refid="classvar_1_1_key_string" kindref="compound">var::KeyString</ref></type>
        <definition>using chrono::ClockTime::UniqueString =  var::KeyString</definition>
        <argsstring></argsstring>
        <name>UniqueString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="81" column="3" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classchrono_1_1_clock_time_1a096de64b4604dc5046dd3aaf2d318a19" prot="private" static="no" mutable="no">
        <type>struct <ref refid="classchrono_1_1_clock_time_1a918ca2c9df3e763ac7c4a8fadce0d14d" kindref="member">timespec</ref></type>
        <definition>struct timespec chrono::ClockTime::m_value</definition>
        <argsstring></argsstring>
        <name>m_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="103" column="17" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a40869380d8a678e7e5cff1c45f629173" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref></type>
        <definition>static ClockTime chrono::ClockTime::get_system_time</definition>
        <argsstring>(ClockId clock_id=ClockId::realtime)</argsstring>
        <name>get_system_time</name>
        <param>
          <type><ref refid="classchrono_1_1_clock_time_1af459a6b32ddf83990c3c791486e32dcf" kindref="member">ClockId</ref></type>
          <declname>clock_id</declname>
          <defval><ref refid="classchrono_1_1_clock_time_1af459a6b32ddf83990c3c791486e32dcfa37e2a166d3ab28426a1d1a481d356d33" kindref="member">ClockId::realtime</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="19" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a05b56788c5af38df159c0fda2432bc59" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref></type>
        <definition>static ClockTime chrono::ClockTime::get_system_resolution</definition>
        <argsstring>(ClockId clock_id=ClockId::realtime)</argsstring>
        <name>get_system_resolution</name>
        <param>
          <type><ref refid="classchrono_1_1_clock_time_1af459a6b32ddf83990c3c791486e32dcf" kindref="member">ClockId</ref></type>
          <declname>clock_id</declname>
          <defval><ref refid="classchrono_1_1_clock_time_1af459a6b32ddf83990c3c791486e32dcfa37e2a166d3ab28426a1d1a481d356d33" kindref="member">ClockId::realtime</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="20" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a9466e7e9a078592933e92169767e7745" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref></type>
        <definition>static ClockTime chrono::ClockTime::from_seconds</definition>
        <argsstring>(u32 seconds)</argsstring>
        <name>from_seconds</name>
        <param>
          <type>u32</type>
          <declname>seconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="27" column="20" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a519ef2efe93fde295063040fbb92bb46" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref></type>
        <definition>static ClockTime chrono::ClockTime::invalid</definition>
        <argsstring>()</argsstring>
        <name>invalid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="52" column="20" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="52" bodyend="54"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a7aa0c5c10b484fd999013a06e003f4f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>chrono::ClockTime::ClockTime</definition>
        <argsstring>()=default</argsstring>
        <name>ClockTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="22" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1aea99cd12b5902b78023b01f42332629e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>chrono::ClockTime::ClockTime</definition>
        <argsstring>(const struct timespec &amp;nano_time)</argsstring>
        <name>ClockTime</name>
        <param>
          <type>const struct <ref refid="classchrono_1_1_clock_time_1a918ca2c9df3e763ac7c4a8fadce0d14d" kindref="member">timespec</ref> &amp;</type>
          <declname>nano_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="23" column="12" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a40c61602367b1230f9b72134eea13b7f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>chrono::ClockTime::ClockTime</definition>
        <argsstring>(const MicroTime &amp;micro_time)</argsstring>
        <name>ClockTime</name>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>micro_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="24" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a44faddcc7eb6aeedc4ac98418ea25d56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref> &amp;</type>
        <definition>ClockTime &amp; chrono::ClockTime::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="31" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="31" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a5be122c837454319a64463c1228e0193" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref> &amp;</type>
        <definition>ClockTime &amp; chrono::ClockTime::set_seconds</definition>
        <argsstring>(u32 seconds)</argsstring>
        <name>set_seconds</name>
        <param>
          <type>u32</type>
          <declname>seconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="37" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a3f3e1c37784bd56e777c959b409bf5db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref> &amp;</type>
        <definition>ClockTime &amp; chrono::ClockTime::set_nanoseconds</definition>
        <argsstring>(u32 value)</argsstring>
        <name>set_nanoseconds</name>
        <param>
          <type>u32</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="42" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1acfcf465ec8ef2096bb63ddeca4a21b70" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>chrono::ClockTime::operator const struct timespec *</definition>
        <argsstring>() const</argsstring>
        <name>operator const struct timespec *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="47" column="3" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a520da0fa2521a738de465d42e66af736" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>chrono::ClockTime::operator struct timespec *</definition>
        <argsstring>()</argsstring>
        <name>operator struct timespec *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="48" column="3" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1ad176061bd97df42fcc28bcfcc6dfa55e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::ClockTime::is_valid</definition>
        <argsstring>() const</argsstring>
        <name>is_valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="50" column="9" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a245573bf5f9c610d80353fe4c05c0d15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::ClockTime::operator&gt;</definition>
        <argsstring>(const ClockTime &amp;a) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="56" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a0e1e8add8bfbdfa29f895c7cf5f1c01a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::ClockTime::operator&lt;</definition>
        <argsstring>(const ClockTime &amp;a) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="57" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a2f6925db3049f20c60902bee63bcec68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::ClockTime::operator&gt;=</definition>
        <argsstring>(const ClockTime &amp;a) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="58" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1ac506bb7e3983150c211e0c7927500f86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::ClockTime::operator&lt;=</definition>
        <argsstring>(const ClockTime &amp;a) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="59" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a00716c695266354c89517903a49e6dbb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::ClockTime::operator==</definition>
        <argsstring>(const ClockTime &amp;a) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="60" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1afcd8c6110f275a814f7465accbfa324d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::ClockTime::operator!=</definition>
        <argsstring>(const ClockTime &amp;a) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="61" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a38efe39d3d3a957bded8426a6972563a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref></type>
        <definition>ClockTime chrono::ClockTime::operator+</definition>
        <argsstring>(const ClockTime &amp;a) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="63" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1ad72f501a289726200ae4eb9ec6c6317c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref></type>
        <definition>ClockTime chrono::ClockTime::operator-</definition>
        <argsstring>(const ClockTime &amp;a) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="64" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1ae305124c2f1369e4497233bfcc392dec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref></type>
        <definition>ClockTime chrono::ClockTime::get_age</definition>
        <argsstring>() const</argsstring>
        <name>get_age</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="65" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a328905bbe73be4f218c2cb8fb3d0c516" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref> &amp;</type>
        <definition>ClockTime &amp; chrono::ClockTime::operator+=</definition>
        <argsstring>(const ClockTime &amp;a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="67" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a7a581e19d97938c4e57d2fd2669abf5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref> &amp;</type>
        <definition>ClockTime &amp; chrono::ClockTime::operator-=</definition>
        <argsstring>(const ClockTime &amp;a)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="72" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="72" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1ad2992b1b20d1a55487d3f092ae11878d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>s32</type>
        <definition>s32 chrono::ClockTime::seconds</definition>
        <argsstring>() const</argsstring>
        <name>seconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="78" column="8" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a6803603b5bcbcd1f54520fcdadedf29e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>s32</type>
        <definition>s32 chrono::ClockTime::nanoseconds</definition>
        <argsstring>() const</argsstring>
        <name>nanoseconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="79" column="8" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1ace3e139c30a66f8f33f2bd9d2473751a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_time_1a5b5b2d4f96914fc017984497379ff84c" kindref="member">UniqueString</ref></type>
        <definition>UniqueString chrono::ClockTime::to_unique_string</definition>
        <argsstring>() const</argsstring>
        <name>to_unique_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="82" column="17" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1ad214091c8c23bbcfb23b510fdea76e13" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class StringClass</type>
          </param>
        </templateparamlist>
        <type>StringClass</type>
        <definition>StringClass chrono::ClockTime::to_string</definition>
        <argsstring>() const</argsstring>
        <name>to_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="86" column="26" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a918ca2c9df3e763ac7c4a8fadce0d14d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>struct timespec *</type>
        <definition>struct timespec * chrono::ClockTime::timespec</definition>
        <argsstring>()</argsstring>
        <name>timespec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="90" column="17" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1aa21f4c5a77bd436681fa63e5a08bc992" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const struct timespec *</type>
        <definition>const struct timespec * chrono::ClockTime::timespec</definition>
        <argsstring>() const</argsstring>
        <name>timespec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="93" column="24" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a02b1438a0a07db6f22a770dd64db92f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>chrono::ClockTime::operator MicroTime</definition>
        <argsstring>() const</argsstring>
        <name>operator MicroTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="95" column="3" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="95" bodyend="97"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a639d24382b48305bb5b0a3872d2e9bfa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void chrono::ClockTime::assign</definition>
        <argsstring>(u32 seconds, u32 nanoseconds)</argsstring>
        <name>assign</name>
        <param>
          <type>u32</type>
          <declname>seconds</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>nanoseconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="100" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classchrono_1_1_clock_time_1a0429d7d61840a05f53165d6c39315f58" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref></type>
        <definition>static ClockTime chrono::ClockTime::add</definition>
        <argsstring>(const ClockTime &amp;a, const ClockTime &amp;b)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="101" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_clock_time_1ad8150b81ddaa0ce4192f1a207feea808" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref></type>
        <definition>static ClockTime chrono::ClockTime::subtract</definition>
        <argsstring>(const ClockTime &amp;a, const ClockTime &amp;b)</argsstring>
        <name>subtract</name>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_time" kindref="compound">ClockTime</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="102" column="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" line="15" column="1" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTime.hpp" bodystart="15" bodyend="104"/>
    <listofallmembers>
      <member refid="classchrono_1_1_clock_time_1a0429d7d61840a05f53165d6c39315f58" prot="private" virt="non-virtual"><scope>chrono::ClockTime</scope><name>add</name></member>
      <member refid="classchrono_1_1_clock_time_1a639d24382b48305bb5b0a3872d2e9bfa" prot="private" virt="non-virtual"><scope>chrono::ClockTime</scope><name>assign</name></member>
      <member refid="classchrono_1_1_clock_time_1af459a6b32ddf83990c3c791486e32dcf" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>ClockId</name></member>
      <member refid="classchrono_1_1_clock_time_1a7aa0c5c10b484fd999013a06e003f4f4" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>ClockTime</name></member>
      <member refid="classchrono_1_1_clock_time_1aea99cd12b5902b78023b01f42332629e" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>ClockTime</name></member>
      <member refid="classchrono_1_1_clock_time_1a40c61602367b1230f9b72134eea13b7f" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>ClockTime</name></member>
      <member refid="classchrono_1_1_clock_time_1a9466e7e9a078592933e92169767e7745" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>from_seconds</name></member>
      <member refid="classchrono_1_1_clock_time_1ae305124c2f1369e4497233bfcc392dec" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>get_age</name></member>
      <member refid="classchrono_1_1_clock_time_1a05b56788c5af38df159c0fda2432bc59" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>get_system_resolution</name></member>
      <member refid="classchrono_1_1_clock_time_1a40869380d8a678e7e5cff1c45f629173" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>get_system_time</name></member>
      <member refid="classchrono_1_1_clock_time_1a519ef2efe93fde295063040fbb92bb46" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>invalid</name></member>
      <member refid="classchrono_1_1_clock_time_1ad176061bd97df42fcc28bcfcc6dfa55e" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>is_valid</name></member>
      <member refid="classchrono_1_1_clock_time_1a096de64b4604dc5046dd3aaf2d318a19" prot="private" virt="non-virtual"><scope>chrono::ClockTime</scope><name>m_value</name></member>
      <member refid="classchrono_1_1_clock_time_1a6803603b5bcbcd1f54520fcdadedf29e" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>nanoseconds</name></member>
      <member refid="classchrono_1_1_clock_time_1acfcf465ec8ef2096bb63ddeca4a21b70" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>operator const struct timespec *</name></member>
      <member refid="classchrono_1_1_clock_time_1a02b1438a0a07db6f22a770dd64db92f8" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>operator MicroTime</name></member>
      <member refid="classchrono_1_1_clock_time_1a520da0fa2521a738de465d42e66af736" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>operator struct timespec *</name></member>
      <member refid="classchrono_1_1_clock_time_1afcd8c6110f275a814f7465accbfa324d" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>operator!=</name></member>
      <member refid="classchrono_1_1_clock_time_1a38efe39d3d3a957bded8426a6972563a" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>operator+</name></member>
      <member refid="classchrono_1_1_clock_time_1a328905bbe73be4f218c2cb8fb3d0c516" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>operator+=</name></member>
      <member refid="classchrono_1_1_clock_time_1ad72f501a289726200ae4eb9ec6c6317c" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>operator-</name></member>
      <member refid="classchrono_1_1_clock_time_1a7a581e19d97938c4e57d2fd2669abf5a" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>operator-=</name></member>
      <member refid="classchrono_1_1_clock_time_1a0e1e8add8bfbdfa29f895c7cf5f1c01a" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>operator&lt;</name></member>
      <member refid="classchrono_1_1_clock_time_1ac506bb7e3983150c211e0c7927500f86" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>operator&lt;=</name></member>
      <member refid="classchrono_1_1_clock_time_1a00716c695266354c89517903a49e6dbb" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>operator==</name></member>
      <member refid="classchrono_1_1_clock_time_1a245573bf5f9c610d80353fe4c05c0d15" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>operator&gt;</name></member>
      <member refid="classchrono_1_1_clock_time_1a2f6925db3049f20c60902bee63bcec68" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>operator&gt;=</name></member>
      <member refid="classchrono_1_1_clock_time_1a44faddcc7eb6aeedc4ac98418ea25d56" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>reset</name></member>
      <member refid="classchrono_1_1_clock_time_1ad2992b1b20d1a55487d3f092ae11878d" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>seconds</name></member>
      <member refid="classchrono_1_1_clock_time_1a3f3e1c37784bd56e777c959b409bf5db" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>set_nanoseconds</name></member>
      <member refid="classchrono_1_1_clock_time_1a5be122c837454319a64463c1228e0193" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>set_seconds</name></member>
      <member refid="classchrono_1_1_clock_time_1ad8150b81ddaa0ce4192f1a207feea808" prot="private" virt="non-virtual"><scope>chrono::ClockTime</scope><name>subtract</name></member>
      <member refid="classchrono_1_1_clock_time_1a918ca2c9df3e763ac7c4a8fadce0d14d" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>timespec</name></member>
      <member refid="classchrono_1_1_clock_time_1aa21f4c5a77bd436681fa63e5a08bc992" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>timespec</name></member>
      <member refid="classchrono_1_1_clock_time_1ad214091c8c23bbcfb23b510fdea76e13" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>to_string</name></member>
      <member refid="classchrono_1_1_clock_time_1ace3e139c30a66f8f33f2bd9d2473751a" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>to_unique_string</name></member>
      <member refid="classchrono_1_1_clock_time_1a5b5b2d4f96914fc017984497379ff84c" prot="public" virt="non-virtual"><scope>chrono::ClockTime</scope><name>UniqueString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
