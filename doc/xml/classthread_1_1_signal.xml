<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classthread_1_1_signal" kind="class" language="C++" prot="public">
    <compoundname>thread::Signal</compoundname>
    <basecompoundref refid="classthread_1_1_signal_flags" prot="public" virt="non-virtual">thread::SignalFlags</basecompoundref>
    <includes local="no">Signal.hpp</includes>
    <innerclass refid="classthread_1_1_signal_1_1_event" prot="public">thread::Signal::Event</innerclass>
    <innerclass refid="classthread_1_1_signal_1_1_handler_scope" prot="public">thread::Signal::HandlerScope</innerclass>
    <innerclass refid="classthread_1_1_signal_1_1_set" prot="public">thread::Signal::Set</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classthread_1_1_signal_1ae6c9e98a5914e266d822d69ef5a6b70b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int thread::Signal::m_signo</definition>
        <argsstring></argsstring>
        <name>m_signo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Signal.hpp" line="260" column="7" bodyfile="API/libraries/ThreadAPI/include/thread/Signal.hpp" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classthread_1_1_signal_1a6daebe8d5e9f2043b9ce450faf884084" prot="private" static="no" mutable="no">
        <type>union sigval</type>
        <definition>union sigval thread::Signal::m_sigvalue</definition>
        <argsstring></argsstring>
        <name>m_sigvalue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Signal.hpp" line="261" column="15" bodyfile="API/libraries/ThreadAPI/include/thread/Signal.hpp" bodystart="261" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classthread_1_1_signal_1a7cf550fb8d52c092ecb1ce3bfb71526e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>thread::Signal::Signal</definition>
        <argsstring>(Number signo, int signal_value=0)</argsstring>
        <name>Signal</name>
        <param>
          <type><ref refid="classthread_1_1_signal_flags_1ac44be3adb1346bb8aecb2596a3cc85b7" kindref="member">Number</ref></type>
          <declname>signo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>signal_value</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Signal.hpp" line="222" column="12" bodyfile="API/libraries/ThreadAPI/include/thread/Signal.hpp" bodystart="222" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_signal_1ae0e625ef295aa627223df9c731079f0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>thread::Signal::Signal</definition>
        <argsstring>(Number signo, void *signal_pointer)</argsstring>
        <name>Signal</name>
        <param>
          <type><ref refid="classthread_1_1_signal_flags_1ac44be3adb1346bb8aecb2596a3cc85b7" kindref="member">Number</ref></type>
          <declname>signo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>signal_pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Signal.hpp" line="224" column="3" bodyfile="API/libraries/ThreadAPI/include/thread/Signal.hpp" bodystart="224" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_signal_1a03060ff4872ce848f70ff287b89368f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classthread_1_1_signal" kindref="compound">Signal</ref> &amp;</type>
        <definition>const Signal &amp; thread::Signal::send</definition>
        <argsstring>(pid_t pid) const</argsstring>
        <name>send</name>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Signal.hpp" line="226" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_signal_1ac74a9d4ce00504ea98675221406d721f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classthread_1_1_signal" kindref="compound">Signal</ref> &amp;</type>
        <definition>Signal &amp; thread::Signal::send</definition>
        <argsstring>(pid_t pid)</argsstring>
        <name>send</name>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Signal.hpp" line="227" column="10" bodyfile="API/libraries/ThreadAPI/include/thread/Signal.hpp" bodystart="227" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_signal_1aec9f8733c71a84047e12a38a36b37841" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classthread_1_1_signal" kindref="compound">Signal</ref> &amp;</type>
        <definition>const Signal &amp; thread::Signal::queue</definition>
        <argsstring>(pid_t pid) const</argsstring>
        <name>queue</name>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Signal.hpp" line="229" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_signal_1a65485436c10f178a0cac95c5924e214c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classthread_1_1_signal" kindref="compound">Signal</ref> &amp;</type>
        <definition>Signal &amp; thread::Signal::queue</definition>
        <argsstring>(pid_t pid)</argsstring>
        <name>queue</name>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Signal.hpp" line="230" column="10" bodyfile="API/libraries/ThreadAPI/include/thread/Signal.hpp" bodystart="230" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_signal_1a27202d8d368bf951846bc94caf4a042a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classthread_1_1_signal" kindref="compound">Signal</ref> &amp;</type>
        <definition>const Signal &amp; thread::Signal::send</definition>
        <argsstring>(const Thread &amp;t) const</argsstring>
        <name>send</name>
        <param>
          <type>const <ref refid="classthread_1_1_thread" kindref="compound">Thread</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Signal.hpp" line="232" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_signal_1a4bd7ed60063a42b7190320c3599af659" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classthread_1_1_signal" kindref="compound">Signal</ref> &amp;</type>
        <definition>Signal &amp; thread::Signal::send</definition>
        <argsstring>(const Thread &amp;t)</argsstring>
        <name>send</name>
        <param>
          <type>const <ref refid="classthread_1_1_thread" kindref="compound">Thread</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Signal.hpp" line="233" column="10" bodyfile="API/libraries/ThreadAPI/include/thread/Signal.hpp" bodystart="233" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_signal_1abcd64b619c98eeb7c4a9ba1c4bf1bafa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classthread_1_1_signal" kindref="compound">Signal</ref> &amp;</type>
        <definition>Signal &amp; thread::Signal::set_handler</definition>
        <argsstring>(const SignalHandler &amp;handler)</argsstring>
        <name>set_handler</name>
        <param>
          <type>const <ref refid="classthread_1_1_signal_handler" kindref="compound">SignalHandler</ref> &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Signal.hpp" line="235" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_signal_1a7f5ae6c0e1b3c8fe6ee116f5fc3aa1b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classthread_1_1_signal" kindref="compound">Signal</ref> &amp;</type>
        <definition>Signal &amp; thread::Signal::reset_handler</definition>
        <argsstring>()</argsstring>
        <name>reset_handler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Signal.hpp" line="236" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_signal_1af941b680aaa4cf5849c226e0d6801115" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classthread_1_1_signal_flags_1ac44be3adb1346bb8aecb2596a3cc85b7" kindref="member">Number</ref></type>
        <definition>Number thread::Signal::number</definition>
        <argsstring>() const</argsstring>
        <name>number</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Signal.hpp" line="242" column="10" bodyfile="API/libraries/ThreadAPI/include/thread/Signal.hpp" bodystart="242" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_signal_1a213f7c8abf7fa3e454158403271d13b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int thread::Signal::signo</definition>
        <argsstring>() const</argsstring>
        <name>signo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Signal.hpp" line="243" column="8" bodyfile="API/libraries/ThreadAPI/include/thread/Signal.hpp" bodystart="243" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_signal_1a25d7de6a55f3e817b5a6784c6ef56cb5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int thread::Signal::sigvalue</definition>
        <argsstring>() const</argsstring>
        <name>sigvalue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Signal.hpp" line="244" column="8" bodyfile="API/libraries/ThreadAPI/include/thread/Signal.hpp" bodystart="244" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_signal_1a077ca5ad277934240894e753648bdddc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void * thread::Signal::sigptr</definition>
        <argsstring>() const</argsstring>
        <name>sigptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Signal.hpp" line="245" column="9" bodyfile="API/libraries/ThreadAPI/include/thread/Signal.hpp" bodystart="245" bodyend="245"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classthread_1_1_signal_1a988b797316b70354dc14e076821cf778" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classthread_1_1_signal" kindref="compound">Signal</ref></type>
        <definition>static Signal thread::Signal::wait</definition>
        <argsstring>(const Set &amp;set)</argsstring>
        <name>wait</name>
        <param>
          <type>const <ref refid="classthread_1_1_signal_1_1_set" kindref="compound">Set</ref> &amp;</type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ThreadAPI/include/thread/Signal.hpp" line="239" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>api::ExecutionContext</label>
        <link refid="classapi_1_1_execution_context"/>
      </node>
      <node id="1">
        <label>thread::Signal</label>
        <link refid="classthread_1_1_signal"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>thread::SignalFlags</label>
        <link refid="classthread_1_1_signal_flags"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>api::ExecutionContext</label>
        <link refid="classapi_1_1_execution_context"/>
      </node>
      <node id="1">
        <label>thread::Signal</label>
        <link refid="classthread_1_1_signal"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>thread::SignalFlags</label>
        <link refid="classthread_1_1_signal_flags"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="API/libraries/ThreadAPI/include/thread/Signal.hpp" line="147" column="1" bodyfile="API/libraries/ThreadAPI/include/thread/Signal.hpp" bodystart="147" bodyend="262"/>
    <listofallmembers>
      <member refid="classapi_1_1_execution_context_1a79ba50868f43a40ce4f5406a56fd0845" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>context_count</name></member>
      <member refid="classapi_1_1_execution_context_1a856b03dd0b7c7732647427e22226898c" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>error</name></member>
      <member refid="classapi_1_1_execution_context_1a4ec3d1f36462eb85a35a835dd2df9fac" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>exit_fatal</name></member>
      <member refid="classapi_1_1_execution_context_1ab048cd82d85bb12f5866722012f09bcc" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>free_context</name></member>
      <member refid="classapi_1_1_execution_context_1abe4eedd752a09e448e4ddfc38915c2d8" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>handle_system_call_null_result</name></member>
      <member refid="classapi_1_1_execution_context_1abe0670b0e9cdc51ed9e4a8f149befa37" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>handle_system_call_result</name></member>
      <member refid="classapi_1_1_execution_context_1ac0e1592ccf0272449e692ead348fadf6" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>is_error</name></member>
      <member refid="classapi_1_1_execution_context_1a853635c194f91fc61577f670db986be0" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>is_success</name></member>
      <member refid="classthread_1_1_signal_1ae6c9e98a5914e266d822d69ef5a6b70b" prot="private" virt="non-virtual"><scope>thread::Signal</scope><name>m_signo</name></member>
      <member refid="classthread_1_1_signal_1a6daebe8d5e9f2043b9ce450faf884084" prot="private" virt="non-virtual"><scope>thread::Signal</scope><name>m_sigvalue</name></member>
      <member refid="classthread_1_1_signal_flags_1ac44be3adb1346bb8aecb2596a3cc85b7" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>Number</name></member>
      <member refid="classthread_1_1_signal_1af941b680aaa4cf5849c226e0d6801115" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>number</name></member>
      <member refid="classthread_1_1_signal_1aec9f8733c71a84047e12a38a36b37841" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>queue</name></member>
      <member refid="classthread_1_1_signal_1a65485436c10f178a0cac95c5924e214c" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>queue</name></member>
      <member refid="classapi_1_1_execution_context_1ab28ff28529a36ab1281f4a76dac43e67" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>reset_error</name></member>
      <member refid="classthread_1_1_signal_1a7f5ae6c0e1b3c8fe6ee116f5fc3aa1b5" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>reset_handler</name></member>
      <member refid="classapi_1_1_execution_context_1ad9199bc3e70a5685dac83e068ec0303a" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>return_value</name></member>
      <member refid="classthread_1_1_signal_1a03060ff4872ce848f70ff287b89368f0" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>send</name></member>
      <member refid="classthread_1_1_signal_1ac74a9d4ce00504ea98675221406d721f" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>send</name></member>
      <member refid="classthread_1_1_signal_1a27202d8d368bf951846bc94caf4a042a" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>send</name></member>
      <member refid="classthread_1_1_signal_1a4bd7ed60063a42b7190320c3599af659" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>send</name></member>
      <member refid="classthread_1_1_signal_1abcd64b619c98eeb7c4a9ba1c4bf1bafa" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>set_handler</name></member>
      <member refid="classthread_1_1_signal_1a7cf550fb8d52c092ecb1ce3bfb71526e" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>Signal</name></member>
      <member refid="classthread_1_1_signal_1ae0e625ef295aa627223df9c731079f0d" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>Signal</name></member>
      <member refid="classthread_1_1_signal_1a213f7c8abf7fa3e454158403271d13b3" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>signo</name></member>
      <member refid="classthread_1_1_signal_1a077ca5ad277934240894e753648bdddc" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>sigptr</name></member>
      <member refid="classthread_1_1_signal_1a25d7de6a55f3e817b5a6784c6ef56cb5" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>sigvalue</name></member>
      <member refid="classthread_1_1_signal_1a988b797316b70354dc14e076821cf778" prot="public" virt="non-virtual"><scope>thread::Signal</scope><name>wait</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
