<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classfs_1_1_file_system" kind="class" language="C++" prot="public">
    <compoundname>fs::FileSystem</compoundname>
    <basecompoundref refid="classapi_1_1_execution_context" prot="public" virt="non-virtual">api::ExecutionContext</basecompoundref>
    <includes local="no">FileSystem.hpp</includes>
    <innerclass refid="classfs_1_1_file_system_1_1_rename" prot="public">fs::FileSystem::Rename</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classfs_1_1_file_system_1a4a0d5fb0636bbc1c24cc4807943db5fe" prot="public" static="no" strong="yes">
        <type></type>
        <name>IsExclude</name>
        <enumvalue id="classfs_1_1_file_system_1a4a0d5fb0636bbc1c24cc4807943db5fea7fa3b767c460b54a2be4d49030b349c7" prot="public">
          <name>no</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classfs_1_1_file_system_1a4a0d5fb0636bbc1c24cc4807943db5feaa6105c0a611b41b08f1209506350279e" prot="public">
          <name>yes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="16" column="3" bodyfile="API/libraries/FsAPI/include/fs/FileSystem.hpp" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="typedef" id="classfs_1_1_file_system_1a79e8659717e1d4c13425988eb9b364a6" prot="public" static="no">
        <type><ref refid="classfs_1_1_file_object_1a91df41f3f4682d9cb09c8ffe7bf5b6fe" kindref="member">File::IsOverwrite</ref></type>
        <definition>using fs::FileSystem::IsOverwrite =  File::IsOverwrite</definition>
        <argsstring></argsstring>
        <name>IsOverwrite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="14" column="3" bodyfile="API/libraries/FsAPI/include/fs/FileSystem.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classfs_1_1_file_system_1a6f880f407dd420fcfce9d24f36047c13" prot="public" static="no">
        <type><ref refid="classfs_1_1_dir_object_1a3895c77a098308ba302d5fb3b7502fc9" kindref="member">Dir::IsRecursive</ref></type>
        <definition>using fs::FileSystem::IsRecursive =  Dir::IsRecursive</definition>
        <argsstring></argsstring>
        <name>IsRecursive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="15" column="3" bodyfile="API/libraries/FsAPI/include/fs/FileSystem.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classfs_1_1_file_system_1a4929836691293a0ed9f7f3e924a520f0" prot="public" static="no">
        <type><ref refid="classfs_1_1_file_system_1a4a0d5fb0636bbc1c24cc4807943db5fe" kindref="member">IsExclude</ref>(*)(const <ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref> name, void *)</type>
        <definition>using fs::FileSystem::ExcludeCallback =  IsExclude (*)(const var::StringView name, void *)</definition>
        <argsstring></argsstring>
        <name>ExcludeCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="18" column="3" bodyfile="API/libraries/FsAPI/include/fs/FileSystem.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfs_1_1_file_system_1a1603c4b026d7f12e65c632ef0b94e146" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fs::FileSystem::FileSystem</definition>
        <argsstring>()</argsstring>
        <name>FileSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="20" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1ac92c98e236ef99109b7f8b769f88ff90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfs_1_1_access" kindref="compound">Access</ref></type>
        <definition>Access fs::FileSystem::access</definition>
        <argsstring>(var::StringView path)</argsstring>
        <name>access</name>
        <param>
          <type><ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref></type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="23" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1a4f86db34f2d3b64254b7df0afdb70c2a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fs::FileSystem::exists</definition>
        <argsstring>(var::StringView path) const</argsstring>
        <name>exists</name>
        <param>
          <type><ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref></type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="26" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1abe514661b1e58bb4fc33a18ce0f04e79" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classfs_1_1_file_system" kindref="compound">FileSystem</ref> &amp;</type>
        <definition>const FileSystem &amp; fs::FileSystem::remove</definition>
        <argsstring>(var::StringView path) const</argsstring>
        <name>remove</name>
        <param>
          <type><ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref></type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="28" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1ab21c08309c37d9dd76a73d59adb0d8a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classfs_1_1_file_system" kindref="compound">FileSystem</ref> &amp;</type>
        <definition>const FileSystem &amp; fs::FileSystem::remove_directory</definition>
        <argsstring>(var::StringView path) const</argsstring>
        <name>remove_directory</name>
        <param>
          <type><ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref></type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="29" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1afb5e68e00ec20cc94f6b8601881473ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classfs_1_1_file_system" kindref="compound">FileSystem</ref> &amp;</type>
        <definition>const FileSystem &amp; fs::FileSystem::remove_directory</definition>
        <argsstring>(var::StringView path, IsRecursive recursive) const</argsstring>
        <name>remove_directory</name>
        <param>
          <type><ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref></type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="classfs_1_1_dir_object_1a3895c77a098308ba302d5fb3b7502fc9" kindref="member">IsRecursive</ref></type>
          <declname>recursive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="32" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1a718720879c308c3297921c44e115254f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fs::FileSystem::directory_exists</definition>
        <argsstring>(var::StringView path) const</argsstring>
        <name>directory_exists</name>
        <param>
          <type><ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref></type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="34" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1a1ba20264c0d0d88c09f13302e61d2c18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classfs_1_1_file_system" kindref="compound">FileSystem</ref> &amp;</type>
        <definition>const FileSystem &amp; fs::FileSystem::create_directory</definition>
        <argsstring>(var::StringView path, const Permissions &amp;permissions=Permissions(0)) const</argsstring>
        <name>create_directory</name>
        <param>
          <type><ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref></type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="classfs_1_1_permissions" kindref="compound">Permissions</ref> &amp;</type>
          <declname>permissions</declname>
          <defval><ref refid="classfs_1_1_permissions" kindref="compound">Permissions</ref>(0)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="36" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1afd9ff6cd878212d156b7e3b73c1c328c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classfs_1_1_file_system" kindref="compound">FileSystem</ref> &amp;</type>
        <definition>const FileSystem &amp; fs::FileSystem::create_directory</definition>
        <argsstring>(var::StringView path, IsRecursive is_recursive, const Permissions &amp;permissions=Permissions(0)) const</argsstring>
        <name>create_directory</name>
        <param>
          <type><ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref></type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="classfs_1_1_dir_object_1a3895c77a098308ba302d5fb3b7502fc9" kindref="member">IsRecursive</ref></type>
          <declname>is_recursive</declname>
        </param>
        <param>
          <type>const <ref refid="classfs_1_1_permissions" kindref="compound">Permissions</ref> &amp;</type>
          <declname>permissions</declname>
          <defval><ref refid="classfs_1_1_permissions" kindref="compound">Permissions</ref>(0)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="40" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1a8dc3402af3ed3d4a13864d84f5bf1606" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t fs::FileSystem::get_entry_count</definition>
        <argsstring>(var::StringView path, IsRecursive is_recursive=IsRecursive::no) const</argsstring>
        <name>get_entry_count</name>
        <param>
          <type><ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref></type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="classfs_1_1_dir_object_1a3895c77a098308ba302d5fb3b7502fc9" kindref="member">IsRecursive</ref></type>
          <declname>is_recursive</declname>
          <defval><ref refid="classfs_1_1_dir_object_1a3895c77a098308ba302d5fb3b7502fc9a7fa3b767c460b54a2be4d49030b349c7" kindref="member">IsRecursive::no</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="45" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1a044ee4605fee04e68f558a1ea66241ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacefs_1a268f5f3572ece215c66853b85c003c33" kindref="member">PathList</ref></type>
        <definition>PathList fs::FileSystem::read_directory</definition>
        <argsstring>(var::StringView path, IsRecursive is_recursive=IsRecursive::no, ExcludeCallback exclude=nullptr, void *context=nullptr) const</argsstring>
        <name>read_directory</name>
        <param>
          <type><ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref></type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="classfs_1_1_dir_object_1a3895c77a098308ba302d5fb3b7502fc9" kindref="member">IsRecursive</ref></type>
          <declname>is_recursive</declname>
          <defval><ref refid="classfs_1_1_dir_object_1a3895c77a098308ba302d5fb3b7502fc9a7fa3b767c460b54a2be4d49030b349c7" kindref="member">IsRecursive::no</ref></defval>
        </param>
        <param>
          <type><ref refid="classfs_1_1_file_system_1a4929836691293a0ed9f7f3e924a520f0" kindref="member">ExcludeCallback</ref></type>
          <declname>exclude</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="49" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1ad3daefa8ab2afe5f098c35cec13ab28a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classfs_1_1_file_system" kindref="compound">FileSystem</ref> &amp;</type>
        <definition>const FileSystem &amp; fs::FileSystem::rename</definition>
        <argsstring>(const Rename &amp;options) const</argsstring>
        <name>rename</name>
        <param>
          <type>const <ref refid="classfs_1_1_file_system_1_1_rename" kindref="compound">Rename</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="60" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1a35e584387189e2562a37d208214395bb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classfs_1_1_file_system" kindref="compound">FileSystem</ref> &amp;</type>
        <definition>const FileSystem &amp; fs::FileSystem::operator()</definition>
        <argsstring>(const Rename &amp;options) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classfs_1_1_file_system_1_1_rename" kindref="compound">Rename</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="61" column="27" bodyfile="API/libraries/FsAPI/include/fs/FileSystem.hpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1a0042070b837d62f96c8d85b53959857b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classfs_1_1_file_system" kindref="compound">FileSystem</ref> &amp;</type>
        <definition>const FileSystem &amp; fs::FileSystem::touch</definition>
        <argsstring>(var::StringView path) const</argsstring>
        <name>touch</name>
        <param>
          <type><ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref></type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="65" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1a6b920f92f0445444b856cf2a5adbb6da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfs_1_1_file_info" kindref="compound">FileInfo</ref></type>
        <definition>FileInfo fs::FileSystem::get_info</definition>
        <argsstring>(var::StringView path) const</argsstring>
        <name>get_info</name>
        <param>
          <type><ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref></type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="67" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1af7659004f288c0a89263b929cf8be92e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfs_1_1_file_info" kindref="compound">FileInfo</ref></type>
        <definition>FileInfo fs::FileSystem::get_info</definition>
        <argsstring>(const File &amp;file) const</argsstring>
        <name>get_info</name>
        <param>
          <type>const <ref refid="classfs_1_1_file" kindref="compound">File</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="68" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1a40af8f0dca8289e7aadb462ca63ef522" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fs::FileSystem::access</definition>
        <argsstring>(var::StringView path, const Access &amp;access)</argsstring>
        <name>access</name>
        <param>
          <type><ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref></type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="classfs_1_1_access" kindref="compound">Access</ref> &amp;</type>
          <declname>access</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="71" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classfs_1_1_file_system_1ae6d429a7d1d1388920713f551deed9fd" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfs_1_1_permissions" kindref="compound">Permissions</ref></type>
        <definition>Permissions fs::FileSystem::get_permissions</definition>
        <argsstring>(var::StringView path) const</argsstring>
        <name>get_permissions</name>
        <param>
          <type><ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref></type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="75" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1a0a9020e5ef88d4c3c3abad8a23dd48fd" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fs::FileSystem::interface_mkdir</definition>
        <argsstring>(const char *path, int mode) const</argsstring>
        <name>interface_mkdir</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="77" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1ae63d411dc5979d996242f6cd4a532106" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fs::FileSystem::interface_rmdir</definition>
        <argsstring>(const char *path) const</argsstring>
        <name>interface_rmdir</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="78" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1ad4aeaed4df7c0969d7583cb9502eacbe" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fs::FileSystem::interface_unlink</definition>
        <argsstring>(const char *path) const</argsstring>
        <name>interface_unlink</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="79" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1a6f48f407af18d93cd5bf0eb4caab4e6e" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fs::FileSystem::interface_stat</definition>
        <argsstring>(const char *path, struct stat *stat) const</argsstring>
        <name>interface_stat</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>struct stat *</type>
          <declname>stat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="80" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1a175395a7566ae3c3ddcf858417fd705d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fs::FileSystem::interface_fstat</definition>
        <argsstring>(int fd, struct stat *stat) const</argsstring>
        <name>interface_fstat</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>struct stat *</type>
          <declname>stat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="81" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_file_system_1a435a4a278a86378aa09acf56e4b4c9b9" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fs::FileSystem::interface_rename</definition>
        <argsstring>(const char *old_name, const char *new_name) const</argsstring>
        <name>interface_rename</name>
        <param>
          <type>const char *</type>
          <declname>old_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>new_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="83" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>api::ExecutionContext</label>
        <link refid="classapi_1_1_execution_context"/>
      </node>
      <node id="1">
        <label>fs::FileSystem</label>
        <link refid="classfs_1_1_file_system"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>api::ExecutionContext</label>
        <link refid="classapi_1_1_execution_context"/>
      </node>
      <node id="1">
        <label>fs::FileSystem</label>
        <link refid="classfs_1_1_file_system"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="API/libraries/FsAPI/include/fs/FileSystem.hpp" line="12" column="1" bodyfile="API/libraries/FsAPI/include/fs/FileSystem.hpp" bodystart="12" bodyend="86"/>
    <listofallmembers>
      <member refid="classfs_1_1_file_system_1ac92c98e236ef99109b7f8b769f88ff90" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>access</name></member>
      <member refid="classfs_1_1_file_system_1a40af8f0dca8289e7aadb462ca63ef522" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>access</name></member>
      <member refid="classapi_1_1_execution_context_1a79ba50868f43a40ce4f5406a56fd0845" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>context_count</name></member>
      <member refid="classfs_1_1_file_system_1a1ba20264c0d0d88c09f13302e61d2c18" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>create_directory</name></member>
      <member refid="classfs_1_1_file_system_1afd9ff6cd878212d156b7e3b73c1c328c" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>create_directory</name></member>
      <member refid="classfs_1_1_file_system_1a718720879c308c3297921c44e115254f" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>directory_exists</name></member>
      <member refid="classapi_1_1_execution_context_1a856b03dd0b7c7732647427e22226898c" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>error</name></member>
      <member refid="classfs_1_1_file_system_1a4929836691293a0ed9f7f3e924a520f0" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>ExcludeCallback</name></member>
      <member refid="classfs_1_1_file_system_1a4f86db34f2d3b64254b7df0afdb70c2a" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>exists</name></member>
      <member refid="classapi_1_1_execution_context_1a4ec3d1f36462eb85a35a835dd2df9fac" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>exit_fatal</name></member>
      <member refid="classfs_1_1_file_system_1a1603c4b026d7f12e65c632ef0b94e146" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>FileSystem</name></member>
      <member refid="classapi_1_1_execution_context_1ab048cd82d85bb12f5866722012f09bcc" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>free_context</name></member>
      <member refid="classfs_1_1_file_system_1a8dc3402af3ed3d4a13864d84f5bf1606" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>get_entry_count</name></member>
      <member refid="classfs_1_1_file_system_1a6b920f92f0445444b856cf2a5adbb6da" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>get_info</name></member>
      <member refid="classfs_1_1_file_system_1af7659004f288c0a89263b929cf8be92e" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>get_info</name></member>
      <member refid="classfs_1_1_file_system_1ae6d429a7d1d1388920713f551deed9fd" prot="protected" virt="non-virtual"><scope>fs::FileSystem</scope><name>get_permissions</name></member>
      <member refid="classapi_1_1_execution_context_1abe4eedd752a09e448e4ddfc38915c2d8" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>handle_system_call_null_result</name></member>
      <member refid="classapi_1_1_execution_context_1abe0670b0e9cdc51ed9e4a8f149befa37" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>handle_system_call_result</name></member>
      <member refid="classfs_1_1_file_system_1a175395a7566ae3c3ddcf858417fd705d" prot="protected" virt="non-virtual"><scope>fs::FileSystem</scope><name>interface_fstat</name></member>
      <member refid="classfs_1_1_file_system_1a0a9020e5ef88d4c3c3abad8a23dd48fd" prot="protected" virt="non-virtual"><scope>fs::FileSystem</scope><name>interface_mkdir</name></member>
      <member refid="classfs_1_1_file_system_1a435a4a278a86378aa09acf56e4b4c9b9" prot="protected" virt="non-virtual"><scope>fs::FileSystem</scope><name>interface_rename</name></member>
      <member refid="classfs_1_1_file_system_1ae63d411dc5979d996242f6cd4a532106" prot="protected" virt="non-virtual"><scope>fs::FileSystem</scope><name>interface_rmdir</name></member>
      <member refid="classfs_1_1_file_system_1a6f48f407af18d93cd5bf0eb4caab4e6e" prot="protected" virt="non-virtual"><scope>fs::FileSystem</scope><name>interface_stat</name></member>
      <member refid="classfs_1_1_file_system_1ad4aeaed4df7c0969d7583cb9502eacbe" prot="protected" virt="non-virtual"><scope>fs::FileSystem</scope><name>interface_unlink</name></member>
      <member refid="classapi_1_1_execution_context_1ac0e1592ccf0272449e692ead348fadf6" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>is_error</name></member>
      <member refid="classapi_1_1_execution_context_1a853635c194f91fc61577f670db986be0" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>is_success</name></member>
      <member refid="classfs_1_1_file_system_1a4a0d5fb0636bbc1c24cc4807943db5fe" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>IsExclude</name></member>
      <member refid="classfs_1_1_file_system_1a79e8659717e1d4c13425988eb9b364a6" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>IsOverwrite</name></member>
      <member refid="classfs_1_1_file_system_1a6f880f407dd420fcfce9d24f36047c13" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>IsRecursive</name></member>
      <member refid="classfs_1_1_file_system_1a35e584387189e2562a37d208214395bb" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>operator()</name></member>
      <member refid="classfs_1_1_file_system_1a044ee4605fee04e68f558a1ea66241ed" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>read_directory</name></member>
      <member refid="classfs_1_1_file_system_1abe514661b1e58bb4fc33a18ce0f04e79" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>remove</name></member>
      <member refid="classfs_1_1_file_system_1ab21c08309c37d9dd76a73d59adb0d8a1" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>remove_directory</name></member>
      <member refid="classfs_1_1_file_system_1afb5e68e00ec20cc94f6b8601881473ed" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>remove_directory</name></member>
      <member refid="classfs_1_1_file_system_1ad3daefa8ab2afe5f098c35cec13ab28a" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>rename</name></member>
      <member refid="classapi_1_1_execution_context_1ab28ff28529a36ab1281f4a76dac43e67" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>reset_error</name></member>
      <member refid="classapi_1_1_execution_context_1ad9199bc3e70a5685dac83e068ec0303a" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>return_value</name></member>
      <member refid="classfs_1_1_file_system_1a0042070b837d62f96c8d85b53959857b" prot="public" virt="non-virtual"><scope>fs::FileSystem</scope><name>touch</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
