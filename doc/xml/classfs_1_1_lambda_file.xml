<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classfs_1_1_lambda_file" kind="class" language="C++" prot="public">
    <compoundname>fs::LambdaFile</compoundname>
    <basecompoundref refid="classfs_1_1_file_access" prot="public" virt="non-virtual">fs::FileAccess&lt; LambdaFile &gt;</basecompoundref>
    <includes local="no">LambdaFile.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classfs_1_1_lambda_file_1ae28b9107a7ae0d38e142161c6461b843" prot="public" static="no">
        <type>int(*)(void *context, int <ref refid="classfs_1_1_file_object_1a47bf1de51cfbcc8ec10f1a2b6c685e8b" kindref="member">location</ref>, <ref refid="classvar_1_1_view" kindref="compound">var::View</ref> view)</type>
        <definition>using fs::LambdaFile::read_callback_t =  int (*)(void *context, int location, var::View view)</definition>
        <argsstring></argsstring>
        <name>read_callback_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/LambdaFile.hpp" line="12" column="3" bodyfile="API/libraries/FsAPI/include/fs/LambdaFile.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classfs_1_1_lambda_file_1a759c9e8f0c5516eaba53cfd5390ed3f9" prot="public" static="no">
        <type>int(*)(void *context, int <ref refid="classfs_1_1_file_object_1a47bf1de51cfbcc8ec10f1a2b6c685e8b" kindref="member">location</ref>, const <ref refid="classvar_1_1_view" kindref="compound">var::View</ref> view)</type>
        <definition>using fs::LambdaFile::write_callback_t =  int (*)(void *context, int location, const var::View view)</definition>
        <argsstring></argsstring>
        <name>write_callback_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/LambdaFile.hpp" line="13" column="3" bodyfile="API/libraries/FsAPI/include/fs/LambdaFile.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfs_1_1_lambda_file_1a78fe9b84c277a14444c759173f35f473" prot="private" static="no" mutable="yes">
        <type>int</type>
        <definition>int fs::LambdaFile::m_location</definition>
        <argsstring></argsstring>
        <name>m_location</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/LambdaFile.hpp" line="29" column="15" bodyfile="API/libraries/FsAPI/include/fs/LambdaFile.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfs_1_1_lambda_file_1ae7d6a253820c7a4577d8398aba0f24a4" prot="private" static="no" mutable="yes">
        <type>size_t</type>
        <definition>size_t fs::LambdaFile::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/LambdaFile.hpp" line="30" column="18" bodyfile="API/libraries/FsAPI/include/fs/LambdaFile.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfs_1_1_lambda_file_1a7326d926e470a7210d65a223901b4784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fs::LambdaFile::LambdaFile</definition>
        <argsstring>()=default</argsstring>
        <name>LambdaFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/LambdaFile.hpp" line="16" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_lambda_file_1ae24cd52c28cb2f9e590b5b00975ec086" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fs::LambdaFile::LambdaFile</definition>
        <argsstring>(const LambdaFile &amp;)=delete</argsstring>
        <name>LambdaFile</name>
        <param>
          <type>const <ref refid="classfs_1_1_lambda_file" kindref="compound">LambdaFile</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/LambdaFile.hpp" line="18" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_lambda_file_1a455545515596adb04ffc30511c4bbf45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfs_1_1_lambda_file" kindref="compound">LambdaFile</ref> &amp;</type>
        <definition>LambdaFile &amp; fs::LambdaFile::operator=</definition>
        <argsstring>(const LambdaFile &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classfs_1_1_lambda_file" kindref="compound">LambdaFile</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/LambdaFile.hpp" line="19" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_lambda_file_1a74468f5d33821f3d359ddd7ae8e08ec5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fs::LambdaFile::LambdaFile</definition>
        <argsstring>(LambdaFile &amp;&amp;)=default</argsstring>
        <name>LambdaFile</name>
        <param>
          <type><ref refid="classfs_1_1_lambda_file" kindref="compound">LambdaFile</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/LambdaFile.hpp" line="20" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_lambda_file_1a4c1f482e757e3480577026e68de6f2ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfs_1_1_lambda_file" kindref="compound">LambdaFile</ref> &amp;</type>
        <definition>LambdaFile &amp; fs::LambdaFile::operator=</definition>
        <argsstring>(LambdaFile &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classfs_1_1_lambda_file" kindref="compound">LambdaFile</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/LambdaFile.hpp" line="21" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_lambda_file_1a2250ae39302627099701105a9003224e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfs_1_1_lambda_file" kindref="compound">LambdaFile</ref> &amp;</type>
        <definition>LambdaFile &amp; fs::LambdaFile::set_size</definition>
        <argsstring>(size_t size)</argsstring>
        <name>set_size</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/LambdaFile.hpp" line="23" column="14" bodyfile="API/libraries/FsAPI/include/fs/LambdaFile.hpp" bodystart="23" bodyend="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classfs_1_1_lambda_file_1a530ad502c868a9dfac654c8e8d83303b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fs::LambdaFile::API_AF</definition>
        <argsstring>(LambdaFile, read_callback_t, read_callback, nullptr)</argsstring>
        <name>API_AF</name>
        <param>
          <type><ref refid="classfs_1_1_lambda_file" kindref="compound">LambdaFile</ref></type>
        </param>
        <param>
          <type><ref refid="classfs_1_1_lambda_file_1ae28b9107a7ae0d38e142161c6461b843" kindref="member">read_callback_t</ref></type>
        </param>
        <param>
          <type>read_callback</type>
        </param>
        <param>
          <type>nullptr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/LambdaFile.hpp" line="31" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_lambda_file_1a96f9aeda3424bee8adbb4f5a5013e4d0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fs::LambdaFile::API_AF</definition>
        <argsstring>(LambdaFile, write_callback_t, write_callback, nullptr)</argsstring>
        <name>API_AF</name>
        <param>
          <type><ref refid="classfs_1_1_lambda_file" kindref="compound">LambdaFile</ref></type>
        </param>
        <param>
          <type><ref refid="classfs_1_1_lambda_file_1a759c9e8f0c5516eaba53cfd5390ed3f9" kindref="member">write_callback_t</ref></type>
        </param>
        <param>
          <type>write_callback</type>
        </param>
        <param>
          <type>nullptr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/LambdaFile.hpp" line="32" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_lambda_file_1ae117d70cd5f8e03ec04f02e517185574" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fs::LambdaFile::API_AF</definition>
        <argsstring>(LambdaFile, void *, context, nullptr)</argsstring>
        <name>API_AF</name>
        <param>
          <type><ref refid="classfs_1_1_lambda_file" kindref="compound">LambdaFile</ref></type>
        </param>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>context</type>
        </param>
        <param>
          <type>nullptr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/LambdaFile.hpp" line="33" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_lambda_file_1a568bc7cd43d8ed6f5077ed82f5570487" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int fs::LambdaFile::interface_read</definition>
        <argsstring>(void *buf, int nbyte) const override</argsstring>
        <name>interface_read</name>
        <reimplements refid="classfs_1_1_file_object_1a09a12609d3d16becde8ace611a91dfcf">interface_read</reimplements>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbyte</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/LambdaFile.hpp" line="35" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_lambda_file_1a65ffa8fc7626ef32c1b5e15230649c14" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int fs::LambdaFile::interface_write</definition>
        <argsstring>(const void *buf, int nbyte) const override</argsstring>
        <name>interface_write</name>
        <reimplements refid="classfs_1_1_file_object_1abcde7c0571b2bf1dec9ea5f2480e6439">interface_write</reimplements>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbyte</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/LambdaFile.hpp" line="36" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_lambda_file_1ad1a88797c63444d3814a2a29a56e41c7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int fs::LambdaFile::interface_lseek</definition>
        <argsstring>(int offset, int whence) const override</argsstring>
        <name>interface_lseek</name>
        <reimplements refid="classfs_1_1_file_object_1a5ce9ef2131a2e715ff0f5e39976f5cc5">interface_lseek</reimplements>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>whence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/LambdaFile.hpp" line="37" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classfs_1_1_lambda_file_1a292e80206205d1327ccd48566b14ba3a" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int fs::LambdaFile::interface_ioctl</definition>
        <argsstring>(int request, void *argument) const override</argsstring>
        <name>interface_ioctl</name>
        <reimplements refid="classfs_1_1_file_object_1a1512640946f22552dbfc0ff397628d48">interface_ioctl</reimplements>
        <param>
          <type>int</type>
          <declname>request</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>argument</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/FsAPI/include/fs/LambdaFile.hpp" line="39" column="7" bodyfile="API/libraries/FsAPI/include/fs/LambdaFile.hpp" bodystart="39" bodyend="41"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>fs::FileAccess&lt; LambdaFile &gt;</label>
        <link refid="classfs_1_1_file_access"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>api::ExecutionContext</label>
        <link refid="classapi_1_1_execution_context"/>
      </node>
      <node id="5">
        <label>fs::FileInfoFlags</label>
        <link refid="classfs_1_1_file_info_flags"/>
      </node>
      <node id="3">
        <label>fs::FileObject</label>
        <link refid="classfs_1_1_file_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>fs::LambdaFile</label>
        <link refid="classfs_1_1_lambda_file"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>fs::FileAccess&lt; LambdaFile &gt;</label>
        <link refid="classfs_1_1_file_access"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>api::ExecutionContext</label>
        <link refid="classapi_1_1_execution_context"/>
      </node>
      <node id="5">
        <label>fs::FileInfoFlags</label>
        <link refid="classfs_1_1_file_info_flags"/>
      </node>
      <node id="3">
        <label>fs::FileObject</label>
        <link refid="classfs_1_1_file_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>fs::LambdaFile</label>
        <link refid="classfs_1_1_lambda_file"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="API/libraries/FsAPI/include/fs/LambdaFile.hpp" line="10" column="1" bodyfile="API/libraries/FsAPI/include/fs/LambdaFile.hpp" bodystart="10" bodyend="42"/>
    <listofallmembers>
      <member refid="classfs_1_1_file_info_flags_1aa8c8d5b66e54b777f3d1ada3d0197930" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>AccessFlags</name></member>
      <member refid="classfs_1_1_lambda_file_1a530ad502c868a9dfac654c8e8d83303b" prot="private" virt="non-virtual"><scope>fs::LambdaFile</scope><name>API_AF</name></member>
      <member refid="classfs_1_1_lambda_file_1a96f9aeda3424bee8adbb4f5a5013e4d0" prot="private" virt="non-virtual"><scope>fs::LambdaFile</scope><name>API_AF</name></member>
      <member refid="classfs_1_1_lambda_file_1ae117d70cd5f8e03ec04f02e517185574" prot="private" virt="non-virtual"><scope>fs::LambdaFile</scope><name>API_AF</name></member>
      <member refid="classapi_1_1_execution_context_1a79ba50868f43a40ce4f5406a56fd0845" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>context_count</name></member>
      <member refid="classapi_1_1_execution_context_1a856b03dd0b7c7732647427e22226898c" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>error</name></member>
      <member refid="classapi_1_1_execution_context_1a4ec3d1f36462eb85a35a835dd2df9fac" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>exit_fatal</name></member>
      <member refid="classfs_1_1_file_object_1a88365d1c6fbf5bc4c792996f2e167723" prot="protected" virt="non-virtual"><scope>fs::LambdaFile</scope><name>fake_ioctl</name></member>
      <member refid="classfs_1_1_file_object_1ae74e67b7592bdfbd9a02e1943dd34628" prot="protected" virt="non-virtual"><scope>fs::LambdaFile</scope><name>fake_seek</name></member>
      <member refid="classfs_1_1_file_access_1aff7dfba1226d7dedf86506aaad53d0a8" prot="protected" virt="non-virtual"><scope>fs::LambdaFile</scope><name>FileAccess</name></member>
      <member refid="classfs_1_1_file_object_1a4f3943ab12b78a3d0462b0456fb4852d" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>FileObject</name></member>
      <member refid="classfs_1_1_file_object_1a4e0b532fa654972f987b76553de2b3e8" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>FileObject</name></member>
      <member refid="classfs_1_1_file_object_1abc9642a821aa2b9c63ac19e5ee427aeb" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>FileObject</name></member>
      <member refid="classapi_1_1_execution_context_1ab048cd82d85bb12f5866722012f09bcc" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>free_context</name></member>
      <member refid="classfs_1_1_file_object_1a047a56b83c755b87a40e527c65f6d505" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>get_line</name></member>
      <member refid="classfs_1_1_file_object_1af985a8ed1bd87544758e1c35a2262709" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>gets</name></member>
      <member refid="classapi_1_1_execution_context_1abe4eedd752a09e448e4ddfc38915c2d8" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>handle_system_call_null_result</name></member>
      <member refid="classapi_1_1_execution_context_1abe0670b0e9cdc51ed9e4a8f149befa37" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>handle_system_call_result</name></member>
      <member refid="classfs_1_1_file_object_1a60e8766bc95ea2f5672c47dab371b840" prot="protected" virt="virtual"><scope>fs::LambdaFile</scope><name>interface_fsync</name></member>
      <member refid="classfs_1_1_lambda_file_1a292e80206205d1327ccd48566b14ba3a" prot="private" virt="virtual"><scope>fs::LambdaFile</scope><name>interface_ioctl</name></member>
      <member refid="classfs_1_1_lambda_file_1ad1a88797c63444d3814a2a29a56e41c7" prot="private" virt="virtual"><scope>fs::LambdaFile</scope><name>interface_lseek</name></member>
      <member refid="classfs_1_1_lambda_file_1a568bc7cd43d8ed6f5077ed82f5570487" prot="private" virt="virtual"><scope>fs::LambdaFile</scope><name>interface_read</name></member>
      <member refid="classfs_1_1_lambda_file_1a65ffa8fc7626ef32c1b5e15230649c14" prot="private" virt="virtual"><scope>fs::LambdaFile</scope><name>interface_write</name></member>
      <member refid="classfs_1_1_file_access_1a94af4b4a41f705e1d0d3873f299aa4af" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>ioctl</name></member>
      <member refid="classfs_1_1_file_access_1a304ebf21ae0c63f529eff4a190512f2c" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>ioctl</name></member>
      <member refid="classfs_1_1_file_access_1a5a77d9b0bb05c41e10671f20b4a9529a" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>ioctl</name></member>
      <member refid="classfs_1_1_file_access_1ac2c548eb665b9831793755cd35720499" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>ioctl</name></member>
      <member refid="classfs_1_1_file_object_1aa53dc315b36882440db2ebe5bdbaa7ce" prot="public" virt="non-virtual" ambiguityscope="fs::FileObject::"><scope>fs::LambdaFile</scope><name>ioctl</name></member>
      <member refid="classfs_1_1_file_object_1adff5fda0af618c7ae7c3b19ab9c036b3" prot="public" virt="non-virtual" ambiguityscope="fs::FileObject::"><scope>fs::LambdaFile</scope><name>ioctl</name></member>
      <member refid="classapi_1_1_execution_context_1ac0e1592ccf0272449e692ead348fadf6" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>is_error</name></member>
      <member refid="classapi_1_1_execution_context_1a853635c194f91fc61577f670db986be0" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>is_success</name></member>
      <member refid="classfs_1_1_file_object_1a67dc7666b7ba8c8b325138bdf882e7c0" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>IsNull</name></member>
      <member refid="classfs_1_1_file_object_1a91df41f3f4682d9cb09c8ffe7bf5b6fe" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>IsOverwrite</name></member>
      <member refid="classfs_1_1_lambda_file_1a7326d926e470a7210d65a223901b4784" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>LambdaFile</name></member>
      <member refid="classfs_1_1_lambda_file_1ae24cd52c28cb2f9e590b5b00975ec086" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>LambdaFile</name></member>
      <member refid="classfs_1_1_lambda_file_1a74468f5d33821f3d359ddd7ae8e08ec5" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>LambdaFile</name></member>
      <member refid="classfs_1_1_file_object_1a47bf1de51cfbcc8ec10f1a2b6c685e8b" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>location</name></member>
      <member refid="classfs_1_1_file_object_1aac91a36c9a958167926e7f12cb7e5503" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>LocationScope</name></member>
      <member refid="classfs_1_1_lambda_file_1a78fe9b84c277a14444c759173f35f473" prot="private" virt="non-virtual"><scope>fs::LambdaFile</scope><name>m_location</name></member>
      <member refid="classfs_1_1_lambda_file_1ae7d6a253820c7a4577d8398aba0f24a4" prot="private" virt="non-virtual"><scope>fs::LambdaFile</scope><name>m_size</name></member>
      <member refid="classfs_1_1_file_access_1a0811c2b6a99e481ace8940e28d473b8e" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>move</name></member>
      <member refid="classfs_1_1_file_info_flags_1a79f31ab4b6deb27ede7b26193adb5c1d" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>OpenFlags</name></member>
      <member refid="classfs_1_1_lambda_file_1a455545515596adb04ffc30511c4bbf45" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>operator=</name></member>
      <member refid="classfs_1_1_lambda_file_1a4c1f482e757e3480577026e68de6f2ab" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>operator=</name></member>
      <member refid="classfs_1_1_file_object_1a73e297c21ad061ba34f187375b53337f" prot="public" virt="non-virtual" ambiguityscope="FileAccess&lt; LambdaFile &gt;::"><scope>fs::LambdaFile</scope><name>operator=</name></member>
      <member refid="classfs_1_1_file_object_1a1c6a4ef2b066354d938f316efe56d6e7" prot="public" virt="non-virtual" ambiguityscope="FileAccess&lt; LambdaFile &gt;::"><scope>fs::LambdaFile</scope><name>operator=</name></member>
      <member refid="classfs_1_1_file_info_flags_1aab8959020c647fca0f3d80e0101b5abf" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>PermissionFlags</name></member>
      <member refid="classfs_1_1_file_access_1a0d8277ad45ad2466fa617041eef28af3" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>read</name></member>
      <member refid="classfs_1_1_file_access_1a1bac8e8fbc2db6a0a297515c5dac9cee" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>read</name></member>
      <member refid="classfs_1_1_file_access_1a4c8fd069ce022ee2c9ea87627455a90c" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>read</name></member>
      <member refid="classfs_1_1_file_access_1a24db80aa448d5024054f69de2a8575ab" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>read</name></member>
      <member refid="classfs_1_1_file_object_1a0c266a254383d5148c4fcdbbc8c95aa0" prot="public" virt="non-virtual" ambiguityscope="fs::FileObject::"><scope>fs::LambdaFile</scope><name>read</name></member>
      <member refid="classfs_1_1_file_object_1aaefd003b44858eb6a7e097b636ac3ee6" prot="public" virt="non-virtual" ambiguityscope="fs::FileObject::"><scope>fs::LambdaFile</scope><name>read</name></member>
      <member refid="classfs_1_1_lambda_file_1ae28b9107a7ae0d38e142161c6461b843" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>read_callback_t</name></member>
      <member refid="classapi_1_1_execution_context_1ab28ff28529a36ab1281f4a76dac43e67" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>reset_error</name></member>
      <member refid="classapi_1_1_execution_context_1ad9199bc3e70a5685dac83e068ec0303a" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>return_value</name></member>
      <member refid="classfs_1_1_file_access_1aebc3eb3be9d3229f69020dee6fd07a4b" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>seek</name></member>
      <member refid="classfs_1_1_file_access_1a87d1ded5e914ba3e73f3df2974259f60" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>seek</name></member>
      <member refid="classfs_1_1_lambda_file_1a2250ae39302627099701105a9003224e" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>set_size</name></member>
      <member refid="classfs_1_1_file_object_1a65a2979f65847e45e639b160d474457c" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>size</name></member>
      <member refid="classfs_1_1_file_object_1a6ffa543b59a25f2d79825ee59b696b5a" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>size_signed</name></member>
      <member refid="classfs_1_1_file_access_1a08175d6e4283fa4fbfeb2ded6f4bc365" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>sync</name></member>
      <member refid="classfs_1_1_file_access_1ad53c24025903e57f692ddcc7bdb3dd79" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>sync</name></member>
      <member refid="classfs_1_1_file_info_flags_1ad1f26cc0bce96368db7bd5c4d5b59704" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>TypeFlags</name></member>
      <member refid="classfs_1_1_file_object_1ad1f7c261534e382960445c4123232b84" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>verify</name></member>
      <member refid="classfs_1_1_file_object_1a04217bfdda67e008ac4543e66c711b6b" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>Whence</name></member>
      <member refid="classfs_1_1_file_access_1add4c17c096c6b42cf5a3a8e7ccf98892" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>write</name></member>
      <member refid="classfs_1_1_file_access_1a76d72d108f14a9045761520e2111779c" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>write</name></member>
      <member refid="classfs_1_1_file_access_1aac7b500c9230fc0405c455a1e039609d" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>write</name></member>
      <member refid="classfs_1_1_file_access_1aee4bb4e627d42743931b87b0de2f19f3" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>write</name></member>
      <member refid="classfs_1_1_file_access_1a610cd5f38513a7340f01ab8425f5e358" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>write</name></member>
      <member refid="classfs_1_1_file_access_1aa139f5528704671abd2497581de49a9c" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>write</name></member>
      <member refid="classfs_1_1_file_access_1a138febb11720818550afca4c554e82f3" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>write</name></member>
      <member refid="classfs_1_1_file_access_1afdb69ceb7d43dadb55b1042fe64ab73d" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>write</name></member>
      <member refid="classfs_1_1_file_object_1a900d46a46fa3a48d136acb055af4914a" prot="public" virt="non-virtual" ambiguityscope="fs::FileObject::"><scope>fs::LambdaFile</scope><name>write</name></member>
      <member refid="classfs_1_1_file_object_1a14b2b1b72b220f672d4757cc9df81f8a" prot="public" virt="non-virtual" ambiguityscope="fs::FileObject::"><scope>fs::LambdaFile</scope><name>write</name></member>
      <member refid="classfs_1_1_lambda_file_1a759c9e8f0c5516eaba53cfd5390ed3f9" prot="public" virt="non-virtual"><scope>fs::LambdaFile</scope><name>write_callback_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
