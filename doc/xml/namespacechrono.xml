<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="namespacechrono" kind="namespace" language="C++">
    <compoundname>chrono</compoundname>
    <innerclass refid="classchrono_1_1_clock_time" prot="public">chrono::ClockTime</innerclass>
    <innerclass refid="classchrono_1_1_clock_timer" prot="public">chrono::ClockTimer</innerclass>
    <innerclass refid="classchrono_1_1_date" prot="public">chrono::Date</innerclass>
    <innerclass refid="classchrono_1_1_date_time" prot="public">chrono::DateTime</innerclass>
    <innerclass refid="classchrono_1_1_micro_time" prot="public">chrono::MicroTime</innerclass>
    <innerclass refid="classchrono_1_1_performance_scope" prot="public">chrono::PerformanceScope</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacechrono_1aa19019b31230c5f70b1d59edf342b762" prot="public" static="no">
        <type><ref refid="classchrono_1_1_performance_scope" kindref="compound">PerformanceScope</ref></type>
        <definition>using chrono::PerformanceContext = typedef PerformanceScope</definition>
        <argsstring></argsstring>
        <name>PerformanceContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="119" column="1" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacechrono_1af2672f65e28905521c580f1afd434ccd" prot="public" static="no">
        <type>u32</type>
        <definition>typedef u32 chrono::micro_time_t</definition>
        <argsstring></argsstring>
        <name>micro_time_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="14" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacechrono_1ad9ceb98c3a90f286f34d6b3ccdae19ab" prot="public" static="no">
        <type><ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref></type>
        <definition>using chrono::Microseconds = typedef MicroTime</definition>
        <argsstring></argsstring>
        <name>Microseconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="94" column="1" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacechrono_1a47ce77951f9fff5e63d761fed3eeb4d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::operator==</definition>
        <argsstring>(const ClockTimer &amp;lhs, const MicroTime &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_timer" kindref="compound">ClockTimer</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="60" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespacechrono_1aae876c39b8ee9c3b991b140b715c7a06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::operator!=</definition>
        <argsstring>(const ClockTimer &amp;lhs, const MicroTime &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_timer" kindref="compound">ClockTimer</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="64" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespacechrono_1a97fa542653ca96e6435d08ea58e08075" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::operator&gt;</definition>
        <argsstring>(const ClockTimer &amp;lhs, const MicroTime &amp;rhs)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_timer" kindref="compound">ClockTimer</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="68" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="namespacechrono_1abbb697846f030df0ff4b1dfc2f2a787e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::operator&lt;</definition>
        <argsstring>(const ClockTimer &amp;lhs, const MicroTime &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_timer" kindref="compound">ClockTimer</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="72" column="8" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="namespacechrono_1a7a6da1efdfb4c4306c46e0275d6a572f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::operator&lt;=</definition>
        <argsstring>(const ClockTimer &amp;lhs, const MicroTime &amp;rhs)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_timer" kindref="compound">ClockTimer</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="76" column="8" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="namespacechrono_1a9053dd7d642e4c2353e110d24dd2a80c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::operator&gt;=</definition>
        <argsstring>(const ClockTimer &amp;lhs, const MicroTime &amp;rhs)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_timer" kindref="compound">ClockTimer</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="80" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="namespacechrono_1a638ad5c45140bb7dd8cdf0e6f8dbe167" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::operator==</definition>
        <argsstring>(const MicroTime &amp;lhs, const ClockTimer &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_timer" kindref="compound">ClockTimer</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="84" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="namespacechrono_1a7675e764345b0bd9e2b7751569bc7067" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::operator!=</definition>
        <argsstring>(const MicroTime &amp;lhs, const ClockTimer &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_timer" kindref="compound">ClockTimer</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="88" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="namespacechrono_1a99ccee7dc7fe7a64e57d6a36173f1ae8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::operator&gt;</definition>
        <argsstring>(const MicroTime &amp;lhs, const ClockTimer &amp;rhs)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_timer" kindref="compound">ClockTimer</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="92" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="namespacechrono_1a597f19e7274671f78b6921e35388b87b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::operator&lt;</definition>
        <argsstring>(const MicroTime &amp;lhs, const ClockTimer &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_timer" kindref="compound">ClockTimer</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="96" column="8" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="96" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="namespacechrono_1a79bc778aba26f8bf0e7865a26a700366" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::operator&lt;=</definition>
        <argsstring>(const MicroTime &amp;lhs, const ClockTimer &amp;rhs)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_timer" kindref="compound">ClockTimer</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="100" column="8" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="namespacechrono_1a9436b14ef69a0c04b2462988d8389ff2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::operator&gt;=</definition>
        <argsstring>(const MicroTime &amp;lhs, const ClockTimer &amp;rhs)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classchrono_1_1_clock_timer" kindref="compound">ClockTimer</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" line="104" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/ClockTimer.hpp" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="namespacechrono_1a62492efc5b45b282bd59f32199474c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void chrono::wait</definition>
        <argsstring>(const MicroTime &amp;duration)</argsstring>
        <name>wait</name>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="96" column="6" declfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" declline="96" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacechrono_1af9713261d7d761bcffa80de8814c4f33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref></type>
        <definition>MicroTime chrono::operator*</definition>
        <argsstring>(u32 lhs, MicroTime rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>u32</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="98" column="18" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="98" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="API/libraries/ChronoAPI/include/chrono.hpp" line="6" column="1"/>
  </compounddef>
</doxygen>
