<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classtest_1_1_test" kind="class" language="C++" prot="public">
    <compoundname>test::Test</compoundname>
    <basecompoundref refid="classapi_1_1_execution_context" prot="public" virt="non-virtual">api::ExecutionContext</basecompoundref>
    <basecompoundref refid="structtest_1_1_test_flags" prot="public" virt="non-virtual">test::TestFlags</basecompoundref>
    <derivedcompoundref refid="classtest_1_1_function" prot="public" virt="non-virtual">test::Function&lt; return_type, args &gt;</derivedcompoundref>
    <includes local="no">Test.hpp</includes>
    <innerclass refid="classtest_1_1_test_1_1_initialize" prot="public">test::Test::Initialize</innerclass>
    <innerclass refid="classtest_1_1_test_1_1_scope" prot="public">test::Test::Scope</innerclass>
    <innerclass refid="classtest_1_1_test_1_1_timed_scope" prot="public">test::Test::TimedScope</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtest_1_1_test_1a91d2828addcfdc238b0d05e1ed659f33" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool test::Test::m_test_result</definition>
        <argsstring></argsstring>
        <name>m_test_result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="186" column="8" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1_test_1a77e2008b844ecb39eaff2363163092b7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool test::Test::m_case_result</definition>
        <argsstring></argsstring>
        <name>m_case_result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="187" column="8" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1_test_1a77ab4ab397db9363546814108f111dff" prot="private" static="no" mutable="no">
        <type><ref refid="classvar_1_1_data_info" kindref="compound">var::DataInfo</ref></type>
        <definition>var::DataInfo test::Test::m_case_data_info</definition>
        <argsstring></argsstring>
        <name>m_case_data_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="188" column="17" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1_test_1a971bb37e2ce64cd7e094a7ab9a8d8b68" prot="private" static="no" mutable="no">
        <type><ref refid="classvar_1_1_data_info" kindref="compound">var::DataInfo</ref></type>
        <definition>var::DataInfo test::Test::m_test_data_info</definition>
        <argsstring></argsstring>
        <name>m_test_data_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="189" column="17" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1_test_1af5441445f858218c5c6671ce2e5f6e7c" prot="private" static="no" mutable="no">
        <type><ref refid="classchrono_1_1_clock_timer" kindref="compound">chrono::ClockTimer</ref></type>
        <definition>chrono::ClockTimer test::Test::m_case_timer</definition>
        <argsstring></argsstring>
        <name>m_case_timer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="190" column="22" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1_test_1ab848cba22184622cb37b0fff68df2751" prot="private" static="no" mutable="no">
        <type>u32</type>
        <definition>u32 test::Test::m_test_duration_microseconds</definition>
        <argsstring></argsstring>
        <name>m_test_duration_microseconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="191" column="7" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1_test_1ad237a008409d6980d7cfd962c9b71719" prot="private" static="no" mutable="no">
        <type><ref refid="classvar_1_1_key_string" kindref="compound">var::KeyString</ref></type>
        <definition>var::KeyString test::Test::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="192" column="18" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1_test_1ab0089bc701f4a5a9002869c4175fb9a8" prot="private" static="no" mutable="no">
        <type><ref refid="classtest_1_1_test" kindref="compound">Test</ref> *</type>
        <definition>Test* test::Test::m_parent</definition>
        <argsstring></argsstring>
        <name>m_parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="193" column="8" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="193" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classtest_1_1_test_1a66b67a496f3100a23afb5db4a729f8e1" prot="private" static="yes" mutable="no">
        <type><ref refid="classvar_1_1_data_info" kindref="compound">var::DataInfo</ref></type>
        <definition>var::DataInfo test::Test::m_final_data_info</definition>
        <argsstring></argsstring>
        <name>m_final_data_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="195" column="24" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1_test_1a6eace7e5851957bb98090de4f3a3e990" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool test::Test::m_final_result</definition>
        <argsstring></argsstring>
        <name>m_final_result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="196" column="15" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1_test_1a5d50b7a0552be84dd503ad7f5b563afa" prot="private" static="yes" mutable="no">
        <type>u32</type>
        <definition>u32 test::Test::m_final_duration_microseconds</definition>
        <argsstring></argsstring>
        <name>m_final_duration_microseconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="197" column="14" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1_test_1a80dc5ed22bbb38a6739ea8b78069ee33" prot="private" static="yes" mutable="no">
        <type><ref refid="classprinter_1_1_printer" kindref="compound">printer::Printer</ref> *</type>
        <definition>printer::Printer* test::Test::m_printer</definition>
        <argsstring></argsstring>
        <name>m_printer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="198" column="27" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="198" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtest_1_1_test_1a8162a4e0d885beccd1b1d04a69a20577" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Case</definition>
        <argsstring></argsstring>
        <name>Case</name>
        <param>
          <type><ref refid="classtest_1_1_case" kindref="compound">Case</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="200" column="16" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtest_1_1_test_1a41b28458470c8bc057133307e5e65718" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test::Test::initialize</definition>
        <argsstring>(const Initialize &amp;options)</argsstring>
        <name>initialize</name>
        <param>
          <type>const <ref refid="classtest_1_1_test_1_1_initialize" kindref="compound">Initialize</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="73" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1aff841db16eb845c2cc2b285b433538f1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void test::Test::finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="74" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1a9d647f0297c1c979e5e123ccbbafc5d5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structtest_1_1_test_flags_1a70b1ad4faa4bfbc819dd3eee28c82c41" kindref="member">ExecuteFlags</ref></type>
        <definition>static ExecuteFlags test::Test::parse_execution_flags</definition>
        <argsstring>(const sys::Cli &amp;cli)</argsstring>
        <name>parse_execution_flags</name>
        <param>
          <type>const <ref refid="classsys_1_1_cli" kindref="compound">sys::Cli</ref> &amp;</type>
          <declname>cli</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="82" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1a605699e964a0a07c66554477655467fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u32</type>
        <definition>static u32 test::Test::parse_test</definition>
        <argsstring>(const sys::Cli &amp;cli, var::StringView name, u32 test_flag)</argsstring>
        <name>parse_test</name>
        <param>
          <type>const <ref refid="classsys_1_1_cli" kindref="compound">sys::Cli</ref> &amp;</type>
          <declname>cli</declname>
        </param>
        <param>
          <type><ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref></type>
          <declname>name</declname>
        </param>
        <param>
          <type>u32</type>
          <declname>test_flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="83" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1a095e6c0ef3bdabd69a978d122196155a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool test::Test::final_result</definition>
        <argsstring>()</argsstring>
        <name>final_result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="137" column="16" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="137" bodyend="137"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtest_1_1_test_1a670fc9289ded34c09ac11883b8010eb7" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>test::Test::Test</definition>
        <argsstring>(var::StringView name)</argsstring>
        <name>Test</name>
        <param>
          <type><ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref></type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="86" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1a328ed6bba3b51a1359639f9c2b4a5616" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test::Test::~Test</definition>
        <argsstring>()</argsstring>
        <name>~Test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="87" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1a136a3dc177b94c124169bd132e27000c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test::Test::execute</definition>
        <argsstring>(const sys::Cli &amp;cli)</argsstring>
        <name>execute</name>
        <param>
          <type>const <ref refid="classsys_1_1_cli" kindref="compound">sys::Cli</ref> &amp;</type>
          <declname>cli</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="89" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1a05cf48adbda5d3590f851363c05dddf2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void test::Test::execute</definition>
        <argsstring>(ExecuteFlags execute_flags=ExecuteFlags::all)</argsstring>
        <name>execute</name>
        <param>
          <type><ref refid="structtest_1_1_test_flags_1a70b1ad4faa4bfbc819dd3eee28c82c41" kindref="member">ExecuteFlags</ref></type>
          <declname>execute_flags</declname>
          <defval><ref refid="structtest_1_1_test_flags_1a70b1ad4faa4bfbc819dd3eee28c82c41aa181a603769c1f98ad927e7367c7aa51" kindref="member">ExecuteFlags::all</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="91" column="8" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="91" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1af8b2dff5d7573d91c5da5c8c7e4c7954" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test::Test::execute_api_case</definition>
        <argsstring>()</argsstring>
        <name>execute_api_case</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="103" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1a0becd1ba426a6577d76c38090b638b32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test::Test::execute_performance_case</definition>
        <argsstring>()</argsstring>
        <name>execute_performance_case</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="104" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1a449f154f14d1e8d4255a6f5d5484aa7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test::Test::execute_stress_case</definition>
        <argsstring>()</argsstring>
        <name>execute_stress_case</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="105" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1a923274a9e149cdcd84ebf865fa5c2f63" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool test::Test::execute_class_api_case</definition>
        <argsstring>()</argsstring>
        <name>execute_class_api_case</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="107" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1a8cef321cf947ea101c0b42916f5c4e7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool test::Test::execute_class_performance_case</definition>
        <argsstring>()</argsstring>
        <name>execute_class_performance_case</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="108" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1a5156e4d5b2dcdd80f052aa98ae578f84" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool test::Test::execute_class_stress_case</definition>
        <argsstring>()</argsstring>
        <name>execute_class_stress_case</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="109" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1aeca4c8f92206828dbe0a032bac8dd90e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test::Test::result</definition>
        <argsstring>() const</argsstring>
        <name>result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="111" column="9" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1a6778c093cb2bb1705741adb757c30715" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test::Test::case_result</definition>
        <argsstring>() const</argsstring>
        <name>case_result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="112" column="9" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1a3cbe9df008c48370985981f02ee6f5d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void test::Test::set_case_failed</definition>
        <argsstring>()</argsstring>
        <name>set_case_failed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="114" column="8" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="114" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1ab1d4eae2af931c03bb6e023eeeecbd8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test::Test::expect</definition>
        <argsstring>(const char *function, unsigned int line, bool value)</argsstring>
        <name>expect</name>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="120" column="8" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="120" bodyend="135"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classtest_1_1_test_1a97dd420741142f885cc7b56305944b18" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classchrono_1_1_clock_timer" kindref="compound">chrono::ClockTimer</ref> &amp;</type>
        <definition>const chrono::ClockTimer &amp; test::Test::case_timer</definition>
        <argsstring>() const</argsstring>
        <name>case_timer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="176" column="29" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="176" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1a6b2510ffffc49461a724dcf9ab44f4af" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_clock_timer" kindref="compound">chrono::ClockTimer</ref> &amp;</type>
        <definition>chrono::ClockTimer &amp; test::Test::case_timer</definition>
        <argsstring>()</argsstring>
        <name>case_timer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="177" column="22" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1abdc81fde13342307cfad7d7de7b651c0" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref></type>
        <definition>var::StringView test::Test::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="181" column="19" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="181" bodyend="181"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classtest_1_1_test_1a6baf4dc50b42482230dad18692e65c74" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u32</type>
        <definition>static u32 test::Test::get_score</definition>
        <argsstring>(u32 microseconds)</argsstring>
        <name>get_score</name>
        <param>
          <type>u32</type>
          <declname>microseconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="179" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1a2860d7b969353db1e64ecc14b46a84e6" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classprinter_1_1_printer" kindref="compound">printer::Printer</ref> &amp;</type>
        <definition>static printer::Printer &amp; test::Test::printer</definition>
        <argsstring>()</argsstring>
        <name>printer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="183" column="27" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="183" bodyend="183"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtest_1_1_test_1af34246f2665f5c3cda37773a44633cf1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test::Test::open_case</definition>
        <argsstring>(var::StringView case_name)</argsstring>
        <name>open_case</name>
        <param>
          <type><ref refid="classvar_1_1_string_view" kindref="compound">var::StringView</ref></type>
          <declname>case_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="201" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1_test_1a9f58ad3381b13219029aa9152c09049c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test::Test::close_case</definition>
        <argsstring>()</argsstring>
        <name>close_case</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/TestAPI/include/test/Test.hpp" line="202" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>api::ExecutionContext</label>
        <link refid="classapi_1_1_execution_context"/>
      </node>
      <node id="4">
        <label>test::Function&lt; return_type, args &gt;</label>
        <link refid="classtest_1_1_function"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>test::Test</label>
        <link refid="classtest_1_1_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>test::TestFlags</label>
        <link refid="structtest_1_1_test_flags"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>api::ExecutionContext</label>
        <link refid="classapi_1_1_execution_context"/>
      </node>
      <node id="1">
        <label>test::Test</label>
        <link refid="classtest_1_1_test"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>test::TestFlags</label>
        <link refid="structtest_1_1_test_flags"/>
      </node>
    </collaborationgraph>
    <location file="API/libraries/TestAPI/include/test/Test.hpp" line="64" column="1" bodyfile="API/libraries/TestAPI/include/test/Test.hpp" bodystart="64" bodyend="203"/>
    <listofallmembers>
      <member refid="classtest_1_1_test_1a8162a4e0d885beccd1b1d04a69a20577" prot="private" virt="non-virtual"><scope>test::Test</scope><name>Case</name></member>
      <member refid="classtest_1_1_test_1a6778c093cb2bb1705741adb757c30715" prot="public" virt="non-virtual"><scope>test::Test</scope><name>case_result</name></member>
      <member refid="classtest_1_1_test_1a97dd420741142f885cc7b56305944b18" prot="protected" virt="non-virtual"><scope>test::Test</scope><name>case_timer</name></member>
      <member refid="classtest_1_1_test_1a6b2510ffffc49461a724dcf9ab44f4af" prot="protected" virt="non-virtual"><scope>test::Test</scope><name>case_timer</name></member>
      <member refid="classtest_1_1_test_1a9f58ad3381b13219029aa9152c09049c" prot="private" virt="non-virtual"><scope>test::Test</scope><name>close_case</name></member>
      <member refid="classapi_1_1_execution_context_1a79ba50868f43a40ce4f5406a56fd0845" prot="public" virt="non-virtual"><scope>test::Test</scope><name>context_count</name></member>
      <member refid="classapi_1_1_execution_context_1a856b03dd0b7c7732647427e22226898c" prot="public" virt="non-virtual"><scope>test::Test</scope><name>error</name></member>
      <member refid="classtest_1_1_test_1a136a3dc177b94c124169bd132e27000c" prot="public" virt="non-virtual"><scope>test::Test</scope><name>execute</name></member>
      <member refid="classtest_1_1_test_1a05cf48adbda5d3590f851363c05dddf2" prot="public" virt="non-virtual"><scope>test::Test</scope><name>execute</name></member>
      <member refid="classtest_1_1_test_1af8b2dff5d7573d91c5da5c8c7e4c7954" prot="public" virt="non-virtual"><scope>test::Test</scope><name>execute_api_case</name></member>
      <member refid="classtest_1_1_test_1a923274a9e149cdcd84ebf865fa5c2f63" prot="public" virt="virtual"><scope>test::Test</scope><name>execute_class_api_case</name></member>
      <member refid="classtest_1_1_test_1a8cef321cf947ea101c0b42916f5c4e7b" prot="public" virt="virtual"><scope>test::Test</scope><name>execute_class_performance_case</name></member>
      <member refid="classtest_1_1_test_1a5156e4d5b2dcdd80f052aa98ae578f84" prot="public" virt="virtual"><scope>test::Test</scope><name>execute_class_stress_case</name></member>
      <member refid="classtest_1_1_test_1a0becd1ba426a6577d76c38090b638b32" prot="public" virt="non-virtual"><scope>test::Test</scope><name>execute_performance_case</name></member>
      <member refid="classtest_1_1_test_1a449f154f14d1e8d4255a6f5d5484aa7e" prot="public" virt="non-virtual"><scope>test::Test</scope><name>execute_stress_case</name></member>
      <member refid="structtest_1_1_test_flags_1a70b1ad4faa4bfbc819dd3eee28c82c41" prot="public" virt="non-virtual"><scope>test::Test</scope><name>ExecuteFlags</name></member>
      <member refid="classapi_1_1_execution_context_1a4ec3d1f36462eb85a35a835dd2df9fac" prot="public" virt="non-virtual"><scope>test::Test</scope><name>exit_fatal</name></member>
      <member refid="classtest_1_1_test_1ab1d4eae2af931c03bb6e023eeeecbd8e" prot="public" virt="non-virtual"><scope>test::Test</scope><name>expect</name></member>
      <member refid="classtest_1_1_test_1a095e6c0ef3bdabd69a978d122196155a" prot="public" virt="non-virtual"><scope>test::Test</scope><name>final_result</name></member>
      <member refid="classtest_1_1_test_1aff841db16eb845c2cc2b285b433538f1" prot="public" virt="non-virtual"><scope>test::Test</scope><name>finalize</name></member>
      <member refid="classapi_1_1_execution_context_1ab048cd82d85bb12f5866722012f09bcc" prot="public" virt="non-virtual"><scope>test::Test</scope><name>free_context</name></member>
      <member refid="classtest_1_1_test_1a6baf4dc50b42482230dad18692e65c74" prot="protected" virt="non-virtual"><scope>test::Test</scope><name>get_score</name></member>
      <member refid="classapi_1_1_execution_context_1abe4eedd752a09e448e4ddfc38915c2d8" prot="public" virt="non-virtual"><scope>test::Test</scope><name>handle_system_call_null_result</name></member>
      <member refid="classapi_1_1_execution_context_1abe0670b0e9cdc51ed9e4a8f149befa37" prot="public" virt="non-virtual"><scope>test::Test</scope><name>handle_system_call_result</name></member>
      <member refid="classtest_1_1_test_1a41b28458470c8bc057133307e5e65718" prot="public" virt="non-virtual"><scope>test::Test</scope><name>initialize</name></member>
      <member refid="classapi_1_1_execution_context_1ac0e1592ccf0272449e692ead348fadf6" prot="public" virt="non-virtual"><scope>test::Test</scope><name>is_error</name></member>
      <member refid="classapi_1_1_execution_context_1a853635c194f91fc61577f670db986be0" prot="public" virt="non-virtual"><scope>test::Test</scope><name>is_success</name></member>
      <member refid="classtest_1_1_test_1a77ab4ab397db9363546814108f111dff" prot="private" virt="non-virtual"><scope>test::Test</scope><name>m_case_data_info</name></member>
      <member refid="classtest_1_1_test_1a77e2008b844ecb39eaff2363163092b7" prot="private" virt="non-virtual"><scope>test::Test</scope><name>m_case_result</name></member>
      <member refid="classtest_1_1_test_1af5441445f858218c5c6671ce2e5f6e7c" prot="private" virt="non-virtual"><scope>test::Test</scope><name>m_case_timer</name></member>
      <member refid="classtest_1_1_test_1a66b67a496f3100a23afb5db4a729f8e1" prot="private" virt="non-virtual"><scope>test::Test</scope><name>m_final_data_info</name></member>
      <member refid="classtest_1_1_test_1a5d50b7a0552be84dd503ad7f5b563afa" prot="private" virt="non-virtual"><scope>test::Test</scope><name>m_final_duration_microseconds</name></member>
      <member refid="classtest_1_1_test_1a6eace7e5851957bb98090de4f3a3e990" prot="private" virt="non-virtual"><scope>test::Test</scope><name>m_final_result</name></member>
      <member refid="classtest_1_1_test_1ad237a008409d6980d7cfd962c9b71719" prot="private" virt="non-virtual"><scope>test::Test</scope><name>m_name</name></member>
      <member refid="classtest_1_1_test_1ab0089bc701f4a5a9002869c4175fb9a8" prot="private" virt="non-virtual"><scope>test::Test</scope><name>m_parent</name></member>
      <member refid="classtest_1_1_test_1a80dc5ed22bbb38a6739ea8b78069ee33" prot="private" virt="non-virtual"><scope>test::Test</scope><name>m_printer</name></member>
      <member refid="classtest_1_1_test_1a971bb37e2ce64cd7e094a7ab9a8d8b68" prot="private" virt="non-virtual"><scope>test::Test</scope><name>m_test_data_info</name></member>
      <member refid="classtest_1_1_test_1ab848cba22184622cb37b0fff68df2751" prot="private" virt="non-virtual"><scope>test::Test</scope><name>m_test_duration_microseconds</name></member>
      <member refid="classtest_1_1_test_1a91d2828addcfdc238b0d05e1ed659f33" prot="private" virt="non-virtual"><scope>test::Test</scope><name>m_test_result</name></member>
      <member refid="classtest_1_1_test_1abdc81fde13342307cfad7d7de7b651c0" prot="protected" virt="non-virtual"><scope>test::Test</scope><name>name</name></member>
      <member refid="classtest_1_1_test_1af34246f2665f5c3cda37773a44633cf1" prot="private" virt="non-virtual"><scope>test::Test</scope><name>open_case</name></member>
      <member refid="classtest_1_1_test_1a9d647f0297c1c979e5e123ccbbafc5d5" prot="public" virt="non-virtual"><scope>test::Test</scope><name>parse_execution_flags</name></member>
      <member refid="classtest_1_1_test_1a605699e964a0a07c66554477655467fd" prot="public" virt="non-virtual"><scope>test::Test</scope><name>parse_test</name></member>
      <member refid="classtest_1_1_test_1a2860d7b969353db1e64ecc14b46a84e6" prot="protected" virt="non-virtual"><scope>test::Test</scope><name>printer</name></member>
      <member refid="classapi_1_1_execution_context_1ab28ff28529a36ab1281f4a76dac43e67" prot="public" virt="non-virtual"><scope>test::Test</scope><name>reset_error</name></member>
      <member refid="classtest_1_1_test_1aeca4c8f92206828dbe0a032bac8dd90e" prot="public" virt="non-virtual"><scope>test::Test</scope><name>result</name></member>
      <member refid="classapi_1_1_execution_context_1ad9199bc3e70a5685dac83e068ec0303a" prot="public" virt="non-virtual"><scope>test::Test</scope><name>return_value</name></member>
      <member refid="classtest_1_1_test_1a3cbe9df008c48370985981f02ee6f5d9" prot="public" virt="non-virtual"><scope>test::Test</scope><name>set_case_failed</name></member>
      <member refid="classtest_1_1_test_1a670fc9289ded34c09ac11883b8010eb7" prot="public" virt="non-virtual"><scope>test::Test</scope><name>Test</name></member>
      <member refid="classtest_1_1_test_1a328ed6bba3b51a1359639f9c2b4a5616" prot="public" virt="non-virtual"><scope>test::Test</scope><name>~Test</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
