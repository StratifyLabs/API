<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classchrono_1_1_micro_time" kind="class" language="C++" prot="public">
    <compoundname>chrono::MicroTime</compoundname>
    <includes local="no">MicroTime.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classchrono_1_1_micro_time_1ac43532301ee243c18d2346ac7b1b0264" prot="private" static="no" mutable="no">
        <type><ref refid="namespacechrono_1af2672f65e28905521c580f1afd434ccd" kindref="member">micro_time_t</ref></type>
        <definition>micro_time_t chrono::MicroTime::m_value_microseconds</definition>
        <argsstring></argsstring>
        <name>m_value_microseconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="91" column="16" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classchrono_1_1_micro_time_1a06652408d9d68e79b308815c3c9722a6" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>chrono::MicroTime::MicroTime</definition>
        <argsstring>(u32 microseconds=0)</argsstring>
        <name>MicroTime</name>
        <param>
          <type>u32</type>
          <declname>microseconds</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="18" column="12" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="18" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_micro_time_1a595ca3536b3bcb992d24524f25be71f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::MicroTime::is_valid</definition>
        <argsstring>() const</argsstring>
        <name>is_valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="23" column="9" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_micro_time_1ac0b69efe870edadcc06863bfd53e7a37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
        <definition>MicroTime &amp; chrono::MicroTime::operator+=</definition>
        <argsstring>(const MicroTime &amp;a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="25" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_micro_time_1ac6418183baab2e78c9a8e250e76a5f26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
        <definition>MicroTime &amp; chrono::MicroTime::operator-=</definition>
        <argsstring>(const MicroTime &amp;a)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="30" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_micro_time_1a3076b1b598d334325d5088edd31e4953" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
        <definition>MicroTime &amp; chrono::MicroTime::operator*=</definition>
        <argsstring>(u32 a)</argsstring>
        <name>operator*=</name>
        <param>
          <type>u32</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="35" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_micro_time_1a36f8a6797cef5272cf3e6a7a2a5e04b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
        <definition>MicroTime &amp; chrono::MicroTime::operator/=</definition>
        <argsstring>(u32 a)</argsstring>
        <name>operator/=</name>
        <param>
          <type>u32</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="40" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_micro_time_1a93204aaad183141c8c4cf32b96c44c91" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref></type>
        <definition>MicroTime chrono::MicroTime::operator+</definition>
        <argsstring>(const MicroTime &amp;a) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="46" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_micro_time_1a1cedf4806b71fc501152971c3fd21f8e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref></type>
        <definition>MicroTime chrono::MicroTime::operator*</definition>
        <argsstring>(u32 a) const</argsstring>
        <name>operator*</name>
        <param>
          <type>u32</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="51" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_micro_time_1a6765324816dd65e4b6f4e8262a570e84" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref></type>
        <definition>MicroTime chrono::MicroTime::operator/</definition>
        <argsstring>(u32 a) const</argsstring>
        <name>operator/</name>
        <param>
          <type>u32</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="52" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_micro_time_1a54740396f25931109d7418a8544d17f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref></type>
        <definition>MicroTime chrono::MicroTime::operator-</definition>
        <argsstring>(const MicroTime &amp;a) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="54" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_micro_time_1a1527b9a2ddee00bafe3621542b3863dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::MicroTime::operator==</definition>
        <argsstring>(const MicroTime &amp;a) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="58" column="8" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_micro_time_1a386204f7e42f29034f2e1700798cc719" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::MicroTime::operator!=</definition>
        <argsstring>(const MicroTime &amp;a) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="62" column="8" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_micro_time_1a149bb511533b6b076cc7e61c3a07aa79" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::MicroTime::operator&gt;</definition>
        <argsstring>(const MicroTime &amp;a) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="66" column="8" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_micro_time_1a411a5167ae2a386947e2718fbb6a7803" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::MicroTime::operator&lt;</definition>
        <argsstring>(const MicroTime &amp;a) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="70" column="3" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_micro_time_1ae6a067b37f8d13c254d3a4671543d249" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::MicroTime::operator&gt;=</definition>
        <argsstring>(const MicroTime &amp;a) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="74" column="8" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_micro_time_1a629f576cfa52a169e589e4acf7d9e828" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chrono::MicroTime::operator&lt;=</definition>
        <argsstring>(const MicroTime &amp;a) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="78" column="3" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_micro_time_1a56ee1ed58a2ce574fd44d8cec4cc4248" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>u32</type>
        <definition>u32 chrono::MicroTime::seconds</definition>
        <argsstring>() const</argsstring>
        <name>seconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="82" column="8" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_micro_time_1a933c83ddf3b7ced096809b4c0ea88c47" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacechrono_1af2672f65e28905521c580f1afd434ccd" kindref="member">micro_time_t</ref></type>
        <definition>micro_time_t chrono::MicroTime::microseconds</definition>
        <argsstring>() const</argsstring>
        <name>microseconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="83" column="17" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_micro_time_1a77554baa45c5d40bce7fa5f8deeb7afb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>u32</type>
        <definition>u32 chrono::MicroTime::milliseconds</definition>
        <argsstring>() const</argsstring>
        <name>milliseconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="84" column="8" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_micro_time_1aef40c80b0def48a36501200a92017cee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
        <definition>const MicroTime &amp; chrono::MicroTime::wait</definition>
        <argsstring>() const</argsstring>
        <name>wait</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="85" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classchrono_1_1_micro_time_1a2baa022f98e03e5975ba764bc309026f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref> &amp;</type>
        <definition>MicroTime &amp; chrono::MicroTime::wait</definition>
        <argsstring>()</argsstring>
        <name>wait</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="86" column="13" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="86" bodyend="88"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classchrono_1_1_micro_time_1a4b3a62498b03fb2359d6ca549aa782b8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchrono_1_1_micro_time" kindref="compound">MicroTime</ref></type>
        <definition>static MicroTime chrono::MicroTime::invalid</definition>
        <argsstring>()</argsstring>
        <name>invalid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="21" column="20" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="21" bodyend="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" line="16" column="1" bodyfile="API/libraries/ChronoAPI/include/chrono/MicroTime.hpp" bodystart="16" bodyend="92"/>
    <listofallmembers>
      <member refid="classchrono_1_1_micro_time_1a4b3a62498b03fb2359d6ca549aa782b8" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>invalid</name></member>
      <member refid="classchrono_1_1_micro_time_1a595ca3536b3bcb992d24524f25be71f6" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>is_valid</name></member>
      <member refid="classchrono_1_1_micro_time_1ac43532301ee243c18d2346ac7b1b0264" prot="private" virt="non-virtual"><scope>chrono::MicroTime</scope><name>m_value_microseconds</name></member>
      <member refid="classchrono_1_1_micro_time_1a933c83ddf3b7ced096809b4c0ea88c47" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>microseconds</name></member>
      <member refid="classchrono_1_1_micro_time_1a06652408d9d68e79b308815c3c9722a6" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>MicroTime</name></member>
      <member refid="classchrono_1_1_micro_time_1a77554baa45c5d40bce7fa5f8deeb7afb" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>milliseconds</name></member>
      <member refid="classchrono_1_1_micro_time_1a386204f7e42f29034f2e1700798cc719" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>operator!=</name></member>
      <member refid="classchrono_1_1_micro_time_1a1cedf4806b71fc501152971c3fd21f8e" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>operator*</name></member>
      <member refid="classchrono_1_1_micro_time_1a3076b1b598d334325d5088edd31e4953" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>operator*=</name></member>
      <member refid="classchrono_1_1_micro_time_1a93204aaad183141c8c4cf32b96c44c91" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>operator+</name></member>
      <member refid="classchrono_1_1_micro_time_1ac0b69efe870edadcc06863bfd53e7a37" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>operator+=</name></member>
      <member refid="classchrono_1_1_micro_time_1a54740396f25931109d7418a8544d17f9" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>operator-</name></member>
      <member refid="classchrono_1_1_micro_time_1ac6418183baab2e78c9a8e250e76a5f26" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>operator-=</name></member>
      <member refid="classchrono_1_1_micro_time_1a6765324816dd65e4b6f4e8262a570e84" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>operator/</name></member>
      <member refid="classchrono_1_1_micro_time_1a36f8a6797cef5272cf3e6a7a2a5e04b7" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>operator/=</name></member>
      <member refid="classchrono_1_1_micro_time_1a411a5167ae2a386947e2718fbb6a7803" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>operator&lt;</name></member>
      <member refid="classchrono_1_1_micro_time_1a629f576cfa52a169e589e4acf7d9e828" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>operator&lt;=</name></member>
      <member refid="classchrono_1_1_micro_time_1a1527b9a2ddee00bafe3621542b3863dc" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>operator==</name></member>
      <member refid="classchrono_1_1_micro_time_1a149bb511533b6b076cc7e61c3a07aa79" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>operator&gt;</name></member>
      <member refid="classchrono_1_1_micro_time_1ae6a067b37f8d13c254d3a4671543d249" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>operator&gt;=</name></member>
      <member refid="classchrono_1_1_micro_time_1a56ee1ed58a2ce574fd44d8cec4cc4248" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>seconds</name></member>
      <member refid="classchrono_1_1_micro_time_1aef40c80b0def48a36501200a92017cee" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>wait</name></member>
      <member refid="classchrono_1_1_micro_time_1a2baa022f98e03e5975ba764bc309026f" prot="public" virt="non-virtual"><scope>chrono::MicroTime</scope><name>wait</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
