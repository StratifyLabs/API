<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classvar_1_1_stack_string" kind="class" language="C++" prot="public">
    <compoundname>var::StackString</compoundname>
    <includes local="no">StackString.hpp</includes>
    <innerclass refid="classvar_1_1_stack_string_1_1_replace" prot="public">var::StackString::Replace</innerclass>
    <templateparamlist>
      <param>
        <type>class Derived</type>
      </param>
      <param>
        <type>int</type>
        <declname>Size</declname>
        <defname>Size</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classvar_1_1_stack_string_1a9ceb6aa6a5329ac97932493cbba50572" prot="public" static="no">
        <type><ref refid="classvar_1_1_string_view_1ab8ac90a82dd067897c09f9b4da75e5a9" kindref="member">StringView::Base</ref></type>
        <definition>using var::StackString&lt; Derived, Size &gt;::Base =  StringView::Base</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="13" column="3" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classvar_1_1_stack_string_1a69c76314c7e0c181c3c170b6c3453d2b" prot="protected" static="no" mutable="no">
        <type>char</type>
        <definition>char var::StackString&lt; Derived, Size &gt;::m_buffer[Size]</definition>
        <argsstring>[Size]</argsstring>
        <name>m_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="175" column="8" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvar_1_1_stack_string_1a9c576958086a82507ab3d3a0f900754d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Derived &amp;</type>
        <definition>Derived &amp; var::StackString&lt; Derived, Size &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="14" column="11" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="14" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1a4837e5e5acc337eb88c8348885ad8d01" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool var::StackString&lt; Derived, Size &gt;::is_empty</definition>
        <argsstring>() const</argsstring>
        <name>is_empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="20" column="9" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1a90bc48e9f85f3915418eea0b645fec34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Derived &amp;</type>
        <definition>Derived &amp; var::StackString&lt; Derived, Size &gt;::append</definition>
        <argsstring>(const char a)</argsstring>
        <name>append</name>
        <param>
          <type>const char</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="22" column="11" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="22" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1a3fdacf768831127c5717e925d304bc89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Derived &amp;</type>
        <definition>Derived &amp; var::StackString&lt; Derived, Size &gt;::append</definition>
        <argsstring>(const StringView a)</argsstring>
        <name>append</name>
        <param>
          <type>const <ref refid="classvar_1_1_string_view" kindref="compound">StringView</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="31" column="11" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="31" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1a54567000529855d01f921072fa826b9a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t var::StackString&lt; Derived, Size &gt;::length</definition>
        <argsstring>() const</argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="39" column="11" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1ae0d4754e8bc082b08068a92b9499018b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>char var::StackString&lt; Derived, Size &gt;::back</definition>
        <argsstring>() const</argsstring>
        <name>back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="40" column="9" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="40" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1ab87eb5df10f25477392ebd3075a2aa4b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Derived</type>
        <definition>Derived var::StackString&lt; Derived, Size &gt;::operator*</definition>
        <argsstring>(u32 a) const</argsstring>
        <name>operator*</name>
        <param>
          <type>u32</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="48" column="11" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="48" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1a88fa6167a8c8a0127668260e24b6ee4f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool var::StackString&lt; Derived, Size &gt;::operator==</definition>
        <argsstring>(const StringView a) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classvar_1_1_string_view" kindref="compound">StringView</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="56" column="8" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1a2c9860343022d5759c9a9c61d4aec891" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool var::StackString&lt; Derived, Size &gt;::operator!=</definition>
        <argsstring>(const StringView a) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classvar_1_1_string_view" kindref="compound">StringView</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="57" column="8" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1af8def0baadcf12c37d1b91664580af5e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool var::StackString&lt; Derived, Size &gt;::operator==</definition>
        <argsstring>(const StackString &amp;a) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classvar_1_1_stack_string" kindref="compound">StackString</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="59" column="8" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1a69238d0f2ab90207680ad6aa1c71521d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool var::StackString&lt; Derived, Size &gt;::operator!=</definition>
        <argsstring>(const StackString &amp;a) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classvar_1_1_stack_string" kindref="compound">StackString</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="63" column="8" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1a26e35b0846a2718be050843882c41bf4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool var::StackString&lt; Derived, Size &gt;::operator==</definition>
        <argsstring>(const char *a) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const char *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="67" column="8" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1a42efabff48c21adfa6f8d146691a563d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool var::StackString&lt; Derived, Size &gt;::operator!=</definition>
        <argsstring>(const char *a) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const char *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="71" column="8" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1a9a3f269d28e7faba675ce6c7a5643f47" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool var::StackString&lt; Derived, Size &gt;::operator&lt;</definition>
        <argsstring>(const StackString &amp;a) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classvar_1_1_stack_string" kindref="compound">StackString</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="75" column="3" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1ad70882a2ea81e272196a311fd63721b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool var::StackString&lt; Derived, Size &gt;::operator&gt;</definition>
        <argsstring>(const StackString &amp;a) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classvar_1_1_stack_string" kindref="compound">StackString</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="79" column="8" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1a1a28765c4f59cbac3f114bc6ea4a488f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr size_t</type>
        <definition>constexpr size_t var::StackString&lt; Derived, Size &gt;::capacity</definition>
        <argsstring>() const</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="83" column="21" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1ac2af71b997e22b1c514972323ea6b180" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>char * var::StackString&lt; Derived, Size &gt;::data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="84" column="9" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1a13333835d25c67b85ec18cbf90ab7256" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * var::StackString&lt; Derived, Size &gt;::cstring</definition>
        <argsstring>() const</argsstring>
        <name>cstring</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="85" column="15" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1af5aeb9062b132f1408655fe5af3f6783" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvar_1_1_string_view" kindref="compound">StringView</ref></type>
        <definition>StringView var::StackString&lt; Derived, Size &gt;::string_view</definition>
        <argsstring>() const</argsstring>
        <name>string_view</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="86" column="15" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1aeafed56c61ce2b9b2dffaba0d86e1e5b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>char var::StackString&lt; Derived, Size &gt;::at</definition>
        <argsstring>(size_t offset) const</argsstring>
        <name>at</name>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="88" column="9" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="88" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1a9c5a279a19ac8d57c3d9a11391398976" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>Derived &amp;</type>
        <definition>Derived &amp; var::StackString&lt; Derived, Size &gt;::format</definition>
        <argsstring>(const char *format, Args... args)</argsstring>
        <name>format</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="96" column="11" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1ab4fbadc071b0664cbeab9850cc0898c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Derived &amp;</type>
        <definition>Derived &amp; var::StackString&lt; Derived, Size &gt;::to_upper</definition>
        <argsstring>()</argsstring>
        <name>to_upper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="101" column="11" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="101" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1ab02f72b33ca04746714bec4965caa5df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Derived &amp;</type>
        <definition>Derived &amp; var::StackString&lt; Derived, Size &gt;::to_lower</definition>
        <argsstring>()</argsstring>
        <name>to_lower</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="108" column="11" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="108" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1ab404d4e94e06f940ecb52ac917693c72" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Derived &amp;</type>
        <definition>Derived &amp; var::StackString&lt; Derived, Size &gt;::pop_front</definition>
        <argsstring>(size_t count=1)</argsstring>
        <name>pop_front</name>
        <param>
          <type>size_t</type>
          <declname>count</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="115" column="11" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="115" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1a1c1b56b61c7b1eb1344b7c0d0e3ff117" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Derived &amp;</type>
        <definition>Derived &amp; var::StackString&lt; Derived, Size &gt;::pop_back</definition>
        <argsstring>(size_t count=1)</argsstring>
        <name>pop_back</name>
        <param>
          <type>size_t</type>
          <declname>count</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="126" column="11" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="126" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1ab31c741882edff83c4a06232e1d68a90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Derived &amp;</type>
        <definition>Derived &amp; var::StackString&lt; Derived, Size &gt;::truncate</definition>
        <argsstring>(size_t new_length)</argsstring>
        <name>truncate</name>
        <param>
          <type>size_t</type>
          <declname>new_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="132" column="11" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="132" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1ae020f401f0923a0c87ba1c18a5ac6181" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Derived &amp;</type>
        <definition>Derived &amp; var::StackString&lt; Derived, Size &gt;::replace</definition>
        <argsstring>(const Replace &amp;options)</argsstring>
        <name>replace</name>
        <param>
          <type>const <ref refid="classvar_1_1_stack_string_1_1_replace" kindref="compound">Replace</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="144" column="11" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="144" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1aa62d5431a113ee4cfc8851379bbf26fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Derived &amp;</type>
        <definition>Derived &amp; var::StackString&lt; Derived, Size &gt;::operator()</definition>
        <argsstring>(const Replace &amp;options)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classvar_1_1_stack_string_1_1_replace" kindref="compound">Replace</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="153" column="18" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="153" bodyend="155"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classvar_1_1_stack_string_1a5b929bd0b01001067857fc962a457d2f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>var::StackString&lt; Derived, Size &gt;::StackString</definition>
        <argsstring>()</argsstring>
        <name>StackString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="158" column="3" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1ad0467c93cb791f63c179024080bdceec" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>var::StackString&lt; Derived, Size &gt;::StackString</definition>
        <argsstring>(const StringView a)</argsstring>
        <name>StackString</name>
        <param>
          <type>const <ref refid="classvar_1_1_string_view" kindref="compound">StringView</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="159" column="3" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="159" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classvar_1_1_stack_string_1a96cd53b693cce09c1198221e16de897e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>var::StackString&lt; Derived, Size &gt;::StackString</definition>
        <argsstring>(const char *a)</argsstring>
        <name>StackString</name>
        <param>
          <type>const char *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="166" column="3" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="166" bodyend="173"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="API/libraries/VarAPI/include/var/StackString.hpp" line="11" column="14" bodyfile="API/libraries/VarAPI/include/var/StackString.hpp" bodystart="11" bodyend="176"/>
    <listofallmembers>
      <member refid="classvar_1_1_stack_string_1a90bc48e9f85f3915418eea0b645fec34" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>append</name></member>
      <member refid="classvar_1_1_stack_string_1a3fdacf768831127c5717e925d304bc89" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>append</name></member>
      <member refid="classvar_1_1_stack_string_1aeafed56c61ce2b9b2dffaba0d86e1e5b" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>at</name></member>
      <member refid="classvar_1_1_stack_string_1ae0d4754e8bc082b08068a92b9499018b" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>back</name></member>
      <member refid="classvar_1_1_stack_string_1a9ceb6aa6a5329ac97932493cbba50572" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>Base</name></member>
      <member refid="classvar_1_1_stack_string_1a1a28765c4f59cbac3f114bc6ea4a488f" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>capacity</name></member>
      <member refid="classvar_1_1_stack_string_1a9c576958086a82507ab3d3a0f900754d" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>clear</name></member>
      <member refid="classvar_1_1_stack_string_1a13333835d25c67b85ec18cbf90ab7256" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>cstring</name></member>
      <member refid="classvar_1_1_stack_string_1ac2af71b997e22b1c514972323ea6b180" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>data</name></member>
      <member refid="classvar_1_1_stack_string_1a9c5a279a19ac8d57c3d9a11391398976" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>format</name></member>
      <member refid="classvar_1_1_stack_string_1a4837e5e5acc337eb88c8348885ad8d01" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>is_empty</name></member>
      <member refid="classvar_1_1_stack_string_1a54567000529855d01f921072fa826b9a" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>length</name></member>
      <member refid="classvar_1_1_stack_string_1a69c76314c7e0c181c3c170b6c3453d2b" prot="protected" virt="non-virtual"><scope>var::StackString</scope><name>m_buffer</name></member>
      <member refid="classvar_1_1_stack_string_1a2c9860343022d5759c9a9c61d4aec891" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>operator!=</name></member>
      <member refid="classvar_1_1_stack_string_1a69238d0f2ab90207680ad6aa1c71521d" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>operator!=</name></member>
      <member refid="classvar_1_1_stack_string_1a42efabff48c21adfa6f8d146691a563d" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>operator!=</name></member>
      <member refid="classvar_1_1_stack_string_1aa62d5431a113ee4cfc8851379bbf26fb" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>operator()</name></member>
      <member refid="classvar_1_1_stack_string_1ab87eb5df10f25477392ebd3075a2aa4b" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>operator*</name></member>
      <member refid="classvar_1_1_stack_string_1a9a3f269d28e7faba675ce6c7a5643f47" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>operator&lt;</name></member>
      <member refid="classvar_1_1_stack_string_1a88fa6167a8c8a0127668260e24b6ee4f" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>operator==</name></member>
      <member refid="classvar_1_1_stack_string_1af8def0baadcf12c37d1b91664580af5e" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>operator==</name></member>
      <member refid="classvar_1_1_stack_string_1a26e35b0846a2718be050843882c41bf4" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>operator==</name></member>
      <member refid="classvar_1_1_stack_string_1ad70882a2ea81e272196a311fd63721b6" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>operator&gt;</name></member>
      <member refid="classvar_1_1_stack_string_1a1c1b56b61c7b1eb1344b7c0d0e3ff117" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>pop_back</name></member>
      <member refid="classvar_1_1_stack_string_1ab404d4e94e06f940ecb52ac917693c72" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>pop_front</name></member>
      <member refid="classvar_1_1_stack_string_1ae020f401f0923a0c87ba1c18a5ac6181" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>replace</name></member>
      <member refid="classvar_1_1_stack_string_1a5b929bd0b01001067857fc962a457d2f" prot="protected" virt="non-virtual"><scope>var::StackString</scope><name>StackString</name></member>
      <member refid="classvar_1_1_stack_string_1ad0467c93cb791f63c179024080bdceec" prot="protected" virt="non-virtual"><scope>var::StackString</scope><name>StackString</name></member>
      <member refid="classvar_1_1_stack_string_1a96cd53b693cce09c1198221e16de897e" prot="protected" virt="non-virtual"><scope>var::StackString</scope><name>StackString</name></member>
      <member refid="classvar_1_1_stack_string_1af5aeb9062b132f1408655fe5af3f6783" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>string_view</name></member>
      <member refid="classvar_1_1_stack_string_1ab02f72b33ca04746714bec4965caa5df" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>to_lower</name></member>
      <member refid="classvar_1_1_stack_string_1ab4fbadc071b0664cbeab9850cc0898c6" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>to_upper</name></member>
      <member refid="classvar_1_1_stack_string_1ab31c741882edff83c4a06232e1d68a90" prot="public" virt="non-virtual"><scope>var::StackString</scope><name>truncate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
